Total_Children_Table$Average_Children <- mean(UO_Demographics$Total_Children)
Total_Children_Table$SD_Children <- sd(UO_Demographics$Total_Children)
Total_Children_Table$Max_Children_AtHome <- max(UO_Demographics$Total_Children_AtHome)
Total_Children_Table$Min_Children_AtHome <- min(UO_Demographics$Total_Children_AtHome)
Total_Children_Table$Average_Children_AtHome <- mean(UO_Demographics$Total_Children_AtHome)
Total_Children_Table$SD_Children_AtHome <- sd(UO_Demographics$Total_Children_AtHome)
write.xlsx(Total_Children_Table, file = "Maternal_Suicide_Data/Demographics.xlsx", sheetName="Total_Children", append=TRUE)
# barchart with added parameters
barplot(Race_Eth_Table$n, names.arg = Race_Eth_Table$Mother_Race_Eth, main = "Race & Ethnicity",
col = c("Red", "Yellow", "Green", "Blue"), horiz = FALSE)
legend("topleft",c("2", "3", "11", "61"), fill = c("Red", "Yellow", "Green", "Blue"))
# Write Demographics ItembyItem
write.csv(UO_Demographics, file = "Maternal_Suicide_Data/Demographics_ItembyItem.csv", na = "")
rm(UO_Demographics_2, Mother_Age, Race_Eth_Table, Family_Income_Table, Group_Assignment_Table, Material_Status_Table, Maternal_Edu_Table,
Children_AtHome_Table, Total_Children_Table, UO_ID_info)
# SBQ ---------------------------------------------------------------------
# Import T1 survey
SBQ <- read.csv("Measures/UO_SBQ_PHQ.csv", stringsAsFactors = FALSE)
SBQ_TimePoint <- read.csv("ID_info/ID_Dates.csv", stringsAsFactors = FALSE)
# Select only the dates we need
SBQ_TimePoint <- select(SBQ_TimePoint, FamID, TimePoint)
# Select the SBQ questions
SBQ <- select(SBQ, FamID = Q8, srm_sbq_1 = Q1, srm_sbq_2 = Q2, srm_sbq_3 = Q3, srm_sbq_4 = Q4)
# Merge Data with ID List
SBQ <- merge(SBQ_TimePoint, SBQ)
# Recode strings to numbers for item 1
SBQ[SBQ == "1. Never"] <- 1
SBQ[SBQ == "2. It was just a passing thought"] <- 2
SBQ[SBQ == "3a. I have had a plan at least once to kill myself but did not try to do it"] <- 3
SBQ[SBQ == "3b. I have had a plan at least once to kill myself and really wanted to die"] <- 3
SBQ[SBQ == "4a. I have attempted to kill myself, but did not want to die"] <- 4
SBQ[SBQ == "4b. I have attempted to kill myself, and really hoped to die"] <- 4
# Recode strings to numbers for item 2
SBQ[SBQ == "2. Rarely (1 time)"] <- 2
SBQ[SBQ == "3. Sometimes (2 times)"] <- 3
SBQ[SBQ == "4. Often (3-4 times)"] <- 4
SBQ[SBQ == "5. Very often (5 or more times)"] <- 5
# Recode strings to numbers for item 3
SBQ[SBQ == "1. No"] <- 1
SBQ[SBQ == "2a. Yes, at one time, but did not really want to die"] <- 2
SBQ[SBQ == "2b. Yes, at one time, and really wanted to die"] <- 2
SBQ[SBQ == "3a. Yes, more than once, but did not really want to do it"] <- 3
SBQ[SBQ == "3b. Yes, more than once, and really wanted to do it"] <- 3
# Recode strings to numbers for item 4
SBQ[SBQ == "0. Never"] <- 0
SBQ[SBQ == "1. No chance at all"] <- 1
SBQ[SBQ == "2. Rather unlikely"] <- 2
SBQ[SBQ == "4. Likely"] <- 4
# Turn numbers numeric
SBQ[,3:6] <- sapply(SBQ[,3:6],as.numeric)
# Create new var for the number of NAs in each row
SBQ$Num_of_NAs <- apply(SBQ, 1, function(x) sum(is.na(x)))
# Calculate old totals
SBQ$sbq_OLD_total <- rowSums(SBQ[, c("srm_sbq_1",	"srm_sbq_2","srm_sbq_3", "srm_sbq_4")])
# Calculate New total If the num of NAs > 0
SBQ$sbq_total <- sum_row_if(0, SBQ$Num_of_NAs, data = SBQ[, c("srm_sbq_1",	"srm_sbq_2", "srm_sbq_3", "srm_sbq_4")])
# If row does not have 80% or more of data make total value a string
SBQ <- SBQ %>%
mutate(sbq_total = ifelse(Num_of_NAs > 2, "", sbq_total))
# Write to csv file
write.csv(SBQ, file = "Maternal_Suicide_Data/SBQ.csv", na = "MISSING")
rm(SBQ, SBQ_TimePoint)
# PHQ ---------------------------------------------------------------------
# Import T1 survey
PHQ <- read.csv("Measures/UO_SBQ_PHQ.csv", stringsAsFactors = FALSE)
PHQ_TimePoint <- read.csv("ID_info/ID_Dates.csv", stringsAsFactors = FALSE)
# Select only the dates we need
PHQ_TimePoint <- select(PHQ_TimePoint, FamID, TimePoint)
# Select only the dates we need
PHQ_TimePoint <- select(PHQ_TimePoint, FamID, TimePoint)
# Select only the needed coloumns
PHQ <- select(PHQ, FamID = Q8, srm_phq_1 = Q5_1, srm_phq_2 = Q5_2, srm_phq_3 = Q5_3, srm_phq_4 = Q5_4,
srm_phq_5 = Q5_5, srm_phq_6 = Q5_6, srm_phq_7 = Q5_7, srm_phq_8 = Q5_8, srm_phq_9 = Q5_9, Q7)
# Merge PHQ with ID List
PHQ <- merge(PHQ_TimePoint, PHQ)
# Recode strings as numbers
PHQ[PHQ == "Not at all"] <- 0;
PHQ[PHQ == "Several days"] <- 1
PHQ[PHQ == "More than half the days"] <- 2
PHQ[PHQ == "Nearly every day"] <- 3
# Turn numbers numeric
PHQ[,3:11] <- sapply(PHQ[,3:11],as.numeric)
# Create new var for the number of NAs in each row
PHQ$Num_of_NAs <- apply(PHQ, 1, function(x) sum(is.na(x)))
# Calculate old total
PHQ$phq_OLD_total <- rowSums(PHQ[, c("srm_phq_1",	"srm_phq_2","srm_phq_3",	"srm_phq_4",	"srm_phq_5",	"srm_phq_6",
"srm_phq_7",	"srm_phq_8",	"srm_phq_9")])
# Calculate New total If the num of NAs < 1
PHQ$sbq_total <- sum_row_if(0 %thru% 1, PHQ$Num_of_NAs, data = PHQ[, c("srm_phq_1",	"srm_phq_2", "srm_phq_3", "srm_phq_4",
"srm_phq_5", "srm_phq_6", "srm_phq_7", "srm_phq_8",
"srm_phq_9")])
# If row does not have 80% or more of data make total value a string
PHQ <- PHQ %>%
mutate(sbq_total = ifelse(Num_of_NAs > 1, "", sbq_total))
# Calculate old total with 9 removed
PHQ$phq_OLD_total_9REMOVED <- rowSums(PHQ[, c("srm_phq_1",	"srm_phq_2","srm_phq_3",	"srm_phq_4",	"srm_phq_5",	"srm_phq_6",
"srm_phq_7",	"srm_phq_8")])
# Calculate New total If the num of NAs < 1
PHQ$sbq_total_9REMOVED <- sum_row_if(0 %thru% 1, PHQ$Num_of_NAs, data = PHQ[, c("srm_phq_1",	"srm_phq_2", "srm_phq_3", "srm_phq_4",
"srm_phq_5", "srm_phq_6", "srm_phq_7", "srm_phq_8")])
PHQ <- PHQ %>%
mutate(sbq_total_9REMOVED = ifelse(Num_of_NAs > 1, "", sbq_total_9REMOVED))
# Write to csv file
write.csv(PHQ, file = "Maternal_Suicide_Data/PHQ.csv", na = "MISSING")
rm(PHQ, PHQ_TimePoint)
# SIDP --------------------------------------------------------------------
# Import UO SIDP
SIDP <- read.csv("Measures/UO_SIDP.csv")
# Merge SIDP data with ID list
SIDP <- merge(ID_List, SIDP)
# Select Item
SIDP <- select(SIDP, FamID, brd83a5)
# Write SIDP data
write.csv(SIDP, file = "Maternal_Suicide_Data/SIDP.csv", na = "MISSING")
rm(SIDP)
# Support Services  -------------------------------------------------------
# Import UO_SERV info
SERV <- read.csv("Measures/UO_SERV.csv")
SERV_ID_List <- read.csv("ID_info/ID_List_Serv.csv")
# Select the columns needed for services for child and services for mother
Services_Child <- select(SERV, FamID, Q87, Q88, Q89, Q90, Q91 , Q92, Q93, Q94, Q95, Q96, Q97, Q98, Q99, Q100, Q101,
Q102, Q103, Q104, Q105, Q106, Q107, Q108, Q109, Q110)
Services_Mom <- select(SERV, FamID, Q111, Q112, Q113,Q114, Q115, Q116, Q117, Q118, Q119, Q120, Q121, Q122, Q123, Q124,
Q125, Q126, Q127, Q128, Q129, Q130, Q131, Q132, Q133, Q134, Q135, Q136, Q137, Q138, Q139, Q140, Q141,
Q142, Q143, Q144, Q145)
# Merge SERV data with ID List
Services_Child <- merge(SERV_ID_List, Services_Child)
Services_Mom <- merge(SERV_ID_List, Services_Mom)
# Write SERV data
write.csv(Services_Child, file = "Maternal_Suicide_Data/Services_Child.csv", na = "MISSING")
write.csv(Services_Mom, file = "Maternal_Suicide_Data/Services_Mom.csv", na = "MISSING")
rm(SERV, Services_Child, Services_Mom, SERV_ID_List)
# Hamilton Anxiety-Scale (HAM-A) ------------------------------------------
# Import HAM-A Data
HAM_A <- read.csv("Measures/UO_T1_Survey.csv", stringsAsFactors = FALSE)
# Select HAM-A Questions
HAM_A <- select(HAM_A, FamID, srm_ham_01 = Q205_1, srm_ham_02 = Q205_2, srm_ham_03 = Q205_3, srm_ham_04 = Q205_4,
srm_ham_05 = Q205_5, srm_ham_06 = Q205_6, srm_ham_07 = Q205_7, srm_ham_08 = Q205_8, srm_ham_09 = Q205_9,
srm_ham_10 = Q205_10, srm_ham_11 = Q205_11, srm_ham_12 = Q205_12, srm_ham_13 = Q205_13)
# Merge HAM_A with ID List
HAM_A <- merge(ID_List, HAM_A)
# Recode Text to numbers
HAM_A[HAM_A == "0 Not present"] <- 0
HAM_A[HAM_A == "1 Mild"] <- 1
HAM_A[HAM_A == "2 Moderate"] <- 2
HAM_A[HAM_A == "3 Severe"] <- 3
HAM_A[HAM_A == "4 Very Severe"] <- 4
# Turn numbers numeric
HAM_A[,2:14] <- sapply(HAM_A[,2:14],as.numeric)
# Create new var for the number of NAs in each row
HAM_A$Num_of_NAs <- apply(HAM_A, 1, function(x) sum(is.na(x)))
# Calculate Old Total
HAM_A$ham_OLD_total <- rowSums(HAM_A[, c("srm_ham_01",	"srm_ham_02", "srm_ham_03", "srm_ham_04", "srm_ham_05", "srm_ham_06",
"srm_ham_07", "srm_ham_08", "srm_ham_09", "srm_ham_10", "srm_ham_11", "srm_ham_12",
"srm_ham_13")])
# Calculate New total If the number of NAs < 3
HAM_A$ham_NEW_total <- sum_row_if(0 %thru% 2, HAM_A$Num_of_NAs, data = HAM_A[, c("srm_ham_01",	"srm_ham_02", "srm_ham_03",
"srm_ham_04","srm_ham_05", "srm_ham_06",
"srm_ham_07", "srm_ham_08", "srm_ham_09",
"srm_ham_10", "srm_ham_11", "srm_ham_12",
"srm_ham_13")])
# If row does not have 80% or more of data make total value a string
HAM_A <- HAM_A %>%
mutate(ham_NEW_total = ifelse(Num_of_NAs > 2, "", ham_NEW_total))
# Write to csv file
write.csv(HAM_A, file = "Maternal_Suicide_Data/HAM_A.csv", na = "MISSING")
rm(HAM_A)
# Children's Behavior Questionnaire (CBQ-VS) ------------------------------------------------------------------
# Import CBQ
CBQ <- read.csv("Measures/UO_T1_Survey.csv", stringsAsFactors = FALSE)
# Select CBQ Questions
CBQ <- select(CBQ, FamID, srm_cbq_01 = Q156_1, srm_cbq_02 = Q156_2, srm_cbq_03 = Q156_3, srm_cbq_04 = Q156_4,
srm_cbq_05 = Q156_5, srm_cbq_06 = Q156_6, srm_cbq_07 = Q156_7, srm_cbq_08 = Q156_8, srm_cbq_09 = Q156_9,
srm_cbq_10 = Q156_10, srm_cbq_11 = Q156_11, srm_cbq_12 = Q156_12, srm_cbq_13r = Q156_13, srm_cbq_14 = Q156_14,
srm_cbq_15 = Q156_15, srm_cbq_16 = Q156_16, srm_cbq_17 = Q156_17, srm_cbq_18 = Q156_18, srm_cbq_19r = Q156_19,
srm_cbq_20r = Q156_20, srm_cbq_21 = Q156_21, srm_cbq_22r = Q156_22, srm_cbq_23 = Q156_23, srm_cbq_24 = Q156_24,
srm_cbq_25 = Q156_25, srm_cbq_26r = Q156_26, srm_cbq_27 = Q156_27, srm_cbq_28 = Q156_28, srm_cbq_29r = Q156_29,
srm_cbq_30 = Q156_30, srm_cbq_31r = Q156_31, srm_cbq_32 = Q156_32, srm_cbq_33 = Q156_33, srm_cbq_34r = Q156_34,
srm_cbq_35 = Q156_35, srm_cbq_36 = Q156_36)
# Merge CBQ with ID List
CBQ <- merge(ID_List, CBQ)
# Recode Text to numbers
CBQ[CBQ == "1 extremely untrue of your child"] <- 1
CBQ[CBQ == "2 quite untrue of your child"] <- 2
CBQ[CBQ == "3 slightly untrue of your child"] <- 3
CBQ[CBQ == "4 neither true nor false of your child"] <- 4
CBQ[CBQ == "5 slightly true of your child"] <- 5
CBQ[CBQ == "6 quite true of your child"] <- 6
CBQ[CBQ == "7 extremely true of your child"] <- 7
# Reverse score certain items
CBQ <- CBQ %>%
mutate_at(c("srm_cbq_13r", "srm_cbq_19r", "srm_cbq_22r", "srm_cbq_31r", "srm_cbq_34r", "srm_cbq_20r", "srm_cbq_26r",
"srm_cbq_29r"),
funs(recode(., "1" = 7,
'2' = 6,
'3' = 5,
'4' = 4,
'5' = 3,
'6' = 2,
'7' = 1,.default = NaN)))
# Turn numbers numeric
CBQ[,2:37] <- sapply(CBQ[,2:37],as.numeric)
# Create new var for the number of NAs in each row
CBQ$Num_of_NAs <- apply(CBQ, 1, function(x) sum(is.na(x)))
# Calculate Surgency subscale if the number of NAs < 8 and clear value if NAs are > 7
CBQ$cbq_surgency <- sum_row_if(0 %thru% 7, CBQ$Num_of_NAs, data = CBQ[, c("srm_cbq_01",	"srm_cbq_04", "srm_cbq_07", "srm_cbq_10",
"srm_cbq_13r", "srm_cbq_16", "srm_cbq_19r", "srm_cbq_22r",
"srm_cbq_25", "srm_cbq_28", "srm_cbq_31r", "srm_cbq_34r")])
CBQ <- CBQ %>%
mutate(cbq_surgency = ifelse(Num_of_NAs > 7, "", cbq_surgency))
# Calculate Negative Affect subscale if the number of NAs < 8 and clear value if NAs are > 7
CBQ$cbq_negative_affect <- sum_row_if(0 %thru% 7, CBQ$Num_of_NAs, data = CBQ[, c("srm_cbq_02",	"srm_cbq_05", "srm_cbq_08", "srm_cbq_11",
"srm_cbq_14", "srm_cbq_17", "srm_cbq_20r", "srm_cbq_23",
"srm_cbq_26r", "srm_cbq_29r", "srm_cbq_32", "srm_cbq_35")])
CBQ <- CBQ %>%
mutate(cbq_negative_affect = ifelse(Num_of_NAs > 7, "", cbq_negative_affect))
# Calculate Effortful Control subscale if the number of NAs < 8 and clear value if NAs are > 7
CBQ$cbq_effortful_control <- sum_row_if(0 %thru% 7, CBQ$Num_of_NAs, data = CBQ[, c("srm_cbq_03",	"srm_cbq_06", "srm_cbq_09", "srm_cbq_12",
"srm_cbq_15", "srm_cbq_18", "srm_cbq_21", "srm_cbq_24",
"srm_cbq_27", "srm_cbq_30", "srm_cbq_33", "srm_cbq_36")])
CBQ <- CBQ %>%
mutate(cbq_effortful_control = ifelse(Num_of_NAs > 7, "", cbq_effortful_control))
# Write to csv file
write.csv(CBQ, file = "Maternal_Suicide_Data/CBQ.csv", na = "MISSING")
rm(CBQ)
# Adverse Childhood Experiences Scale (ACEs)-------------------------------------
# Import ACEs data
ACEs <- read.csv("Measures/UO_T1_Survey.csv", stringsAsFactors = FALSE)
# Select ACEs Questions
ACEs <- select(ACEs, FamID, srm_aces_01 = Q157, srm_aces_01_dis = Q158, srm_aces_02 = Q159, srm_aces_02_dis = Q160,
srm_aces_03 = Q161, srm_aces_03_dis = Q162, srm_aces_04 = Q163, srm_aces_04_dis = Q164, srm_aces_05 = Q165,
srm_aces_05_dis = Q166, srm_aces_06 = Q167, srm_aces_06_dis = Q168, srm_aces_07 = Q169, srm_aces_07_dis = Q170,
srm_aces_08 = Q171, srm_aces_08_dis = Q172, srm_aces_09 = Q173, srm_aces_09_dis = Q174, srm_aces_10 = Q175,
srm_aces_10_dis = Q176)
# Merge ACEs with ID list
ACEs <- merge(ID_List, ACEs)
# Recode Text to Numbers
ACEs[ACEs == "No"] <- 0
ACEs[ACEs == "Yes"] <- 1
# Turn numbers numeric
ACEs[,2] <- sapply(ACEs[,2],as.numeric)
ACEs[,4] <- sapply(ACEs[,4],as.numeric)
ACEs[,6] <- sapply(ACEs[,6],as.numeric)
ACEs[,8] <- sapply(ACEs[,8],as.numeric)
ACEs[,10] <- sapply(ACEs[,10],as.numeric)
ACEs[,12] <- sapply(ACEs[,12],as.numeric)
ACEs[,14] <- sapply(ACEs[,14],as.numeric)
ACEs[,16] <- sapply(ACEs[,16],as.numeric)
ACEs[,18] <- sapply(ACEs[,18],as.numeric)
ACEs[,20] <- sapply(ACEs[,20],as.numeric)
# Create new var of num of NAs in each row
ACEs$Num_of_NAs <- apply(ACEs, 1, function(x) sum(is.na(x)))
# Calculate old total
ACEs$aces_OLD_total <- rowSums(ACEs[, c("srm_aces_01",	"srm_aces_02", "srm_aces_03", "srm_aces_04", "srm_aces_05", "srm_aces_06",
"srm_aces_07", "srm_aces_08", "srm_aces_09", "srm_aces_10")])
# Calculate New total If the num of NAs > 2
ACEs$aces_total <- sum_row_if(0 %thru% 2, ACEs$Num_of_NAs, data = ACEs[, c("srm_aces_01",	"srm_aces_02", "srm_aces_03",
"srm_aces_04", "srm_aces_05", "srm_aces_06",
"srm_aces_07", "srm_aces_08", "srm_aces_09",
"srm_aces_10")])
# If row does not have 80% or more of data make total value a string
ACEs <- ACEs %>%
mutate(aces_NEW_total = ifelse(Num_of_NAs > 2, "", aces_NEW_total))
# Write to csv file
write.csv(ACEs, file = "Maternal_Suicide_Data/ACEs.csv", na = "MISSING")
rm(ACEs)
# Addiction Severity Index (ASI) ------------------------------------------
# Import ASI
ASI <- read.csv("Measures/UO_T1_Survey.csv", stringsAsFactors = FALSE)
# Select ASI Questions
ASI <- select(ASI, FamID, srm_asi_01 = Q361, srm_asi_02 = Q362, srm_asi_03 = Q363, srm_asi_04 = Q364, srm_asi_05 = Q365,
srm_asi_06 = Q366, srm_asi_07 = Q367, srm_asi_08 = Q368, srm_asi_09 = Q369, srm_asi_10 = Q370, srm_asi_11 = Q371,
srm_asi_12 = Q372, srm_asi_13 = Q373, srm_asi_14 = Q374, srm_asi_15 = Q375, srm_asi_16 = Q376, srm_asi_17 = Q377,
srm_asi_18 = Q378, srm_asi_19 = Q379, srm_asi_20 = Q380, srm_asi_21 = Q381, srm_asi_22 = Q382, srm_asi_23 = Q383,
srm_asi_24 = Q384, srm_asi_25 = Q385, srm_asi_26 = Q386, srm_asi_27_1 = Q387_1, srm_asi_27_2 = Q387_2,
srm_asi_27_3 = Q387_3, srm_asi_27_4 = Q387_4, srm_asi_27_5 = Q387_5, srm_asi_27_6 = Q387_6, srm_asi_27_7 = Q387_7,
srm_asi_27_8 = Q387_8, srm_asi_27_9 = Q387_9, srm_asi_27_10 = Q387_10, srm_asi_27_11 = Q387_11, srm_asi_28 = Q388,
srm_asi_29 = Q389, srm_asi_30 = Q390, srm_asi_31 = Q391, srm_asi_32 = Q392, srm_asi_33 = Q393, srm_asi_34 = Q394,
srm_asi_35 = Q395, srm_asi_36 = Q396, srm_asi_37 = Q397, srm_asi_38 = Q398, srm_asi_39 = Q399, srm_asi_40 = Q400,
srm_asi_41 = Q401, srm_asi_42 = Q402, srm_asi_43 = Q403, srm_asi_44 = Q404, srm_asi_45 = Q405)
# Merge CBQ with ID List
ASI <- merge(ID_List, ASI)
# Write to csv file
write.csv(ASI, file = "Maternal_Suicide_Data/ASI.csv", na = "MISSING")
rm(ASI)
# Data Request from Christina for Maternal Suicide
library(dbplyr)
library(tidyverse)
library(eeptools)
library(data.table)
library(xlsx)
library(expss)
# ID List -----------------------------------------------------------------
UO_ID_info <- read.csv("ID_info/UO_IDs_Dates.csv")
UO_ID_info <- filter(UO_ID_info, Group.Assignment == "Assigned Group 1 (DBT)" |
Group.Assignment == "Assigned Group 2 (FSU)" |
Group.Assignment == "Assigned Group 3 (HC)")
UO_ID_info <- filter(UO_ID_info, Eligibility.Status == "enrolled")
UO_ID_info <- select(UO_ID_info, FamID = Family.ID, Group_Assignment = Group.Assignment,
Eligibility_Status = Eligibility.Status, Intake_Date = Intake,
T1_Date = Time.1, Mom_DOB = Mom.DOB)
ID_List <- select(UO_ID_info, FamID)
write.csv(UO_ID_info, file = "ID_info/UO_ID_Dates.csv", na = "MISSING")
source("~/Documents/GitHub/DataUploadAutomation/Upload and Tables/Scripts/CCNES_Upload_Script.R")
source("~/Documents/GitHub/DataUploadAutomation/Upload and Tables/Scripts/CCNES_Upload_Script.R")
source("~/Documents/GitHub/DataUploadAutomation/Upload and Tables/Scripts/CCNES_Upload_Script.R")
source("~/Documents/GitHub/DataUploadAutomation/Upload and Tables/Scripts/CCNES_Upload_Script.R")
source("~/Documents/GitHub/DataUploadAutomation/Upload and Tables/Scripts/CCNES_Upload_Script.R")
source("~/Documents/GitHub/DataUploadAutomation/Upload and Tables/Data/Upload Preparation.R")
Qualtrics <- Qualtrics %>%
mutate_at(new_ders_names,
funs(recode(., "Almost Never (0-10%)" = 1,
"Sometimes (11%-35%)" = 2,
"About half the time (36%-65%)" = 3,
"Most of the time (66-90%)" = 4,
"Almost Always (91-100%)" = 5)))
View(Qualtrics)
CCNES_Prep <- select(Qualtrics, c(Fam_ID, child_guid, child_famID, interview_date, interview_age_child, child_sex, GroupAssignment, Timepoint = Timepoint, contains("srm_ders")))
Qualtrics <- Qualtrics %>%
mutate_at(new_ders_names,
funs(recode(., "Almost Never (0-10%)" = 1,
"Sometimes (11%-35%)" = 2,
"About half the time (36%-65%)" = 3,
"Most of the time (66-90%)" = 4,
"Almost Always (91-100%)" = 5)))
Qualtrics <- select(Qualtrics, c(Fam_ID, child_guid, child_famID, interview_date, interview_age_child, child_sex, GroupAssignment, Timepoint = Timepoint, contains("srm_ders")))
Qualtrics <- Qualtrics %>%
mutate_at(new_ders_names,
funs(recode(., "Almost Never (0-10%)" = 1,
"Sometimes (11%-35%)" = 2,
"About half the time (36%-65%)" = 3,
"Most of the time (66-90%)" = 4,
"Almost Always (91-100%)" = 5)))
View(Qualtrics)
source("~/Documents/GitHub/DataUploadAutomation/Upload and Tables/Data/Upload Preparation.R")
Qualtrics <- select(Qualtrics, c(Fam_ID, child_guid, child_famID, interview_date, interview_age_child, child_sex, GroupAssignment, Timepoint = Timepoint, contains("srm_ders")))
View(Pedigree)
Qualtrics <- Qualtrics %>%
mutate_at(new_ders_names,
funs(recode(., "Almost Never (0-10%)" = 1,
"Sometimes (11%-35%)" = 2,
"About half the time (36%-65%)" = 3,
"Most of the time (66-90%)" = 4,
"Almost Always (91-100%)" = 5)))
# Rename the reverse scored columns
Reverse_ders_names <- new_ders_names
revers_ders_cols <- c("srm_ders_1", "srm_ders_2", "srm_ders_6", "srm_ders_7", "srm_ders_8", "srm_ders_10",
"srm_ders_17", "srm_ders_20", "srm_ders_22","srm_ders_24", "srm_ders_34")
revers_ders_cols <- paste(revers_ders_cols, "r", sep = "")
Reverse_ders_names[c(1,2,6,7,8,10,17,20,22,24,34)] <- revers_ders_cols
setnames(Qualtrics, new_ders_names, Reverse_ders_names)
# Reverse score certain items
Qualtrics[,revers_ders_cols] = 6 - Qualtrics[,revers_ders_cols]
# Recode UO groupassignment
Qualtrics <- Qualtrics %>%
mutate_at(c("GroupAssignment"),
funs(recode(., "Assigned Group 3 (HC)" = "Healthy",
'Assigned Group 2 (FSU)' = "NO DBT",
'Assigned Group 1 (DBT)' = "DBT")))
# Calculated awareness
Qualtrics <- add_column(Qualtrics,
DERS_awareness_imputation = varScore(Qualtrics, Forward =
c("srm_ders_2r", "srm_ders_6r", "srm_ders_8r",
"srm_ders_10r","srm_ders_17r", "srm_ders_34r"),
MaxMiss = .02), .after = "srm_ders_36")
# Calculated total
Qualtrics <- add_column(Qualtrics, DERS_total_imputation = varScore(Qualtrics, Forward =  select(Qualtrics,c(starts_with("srm_ders"))),MaxMiss = .02), .after = "DERS_strategies_imputation")
# NDA Sheet
# Create NDA prep sheet, select all the needed columns from prep sheet
NDA_ders_Prep <- select(Qualtrics, c(subjectkey, src_subject_id,  child_sex  ,interview_age_Mom, interview_date, starts_with("srm_ders")))
# NDA Sheet
# Create NDA prep sheet, select all the needed columns from prep sheet
NDA_ders_Prep <- select(Qualtrics, c(subjectkey= child_guid, src_subject_id= child_famID,  sex = child_sex  ,interview_age_child, interview_date, starts_with("srm_ders")))
# Combine NDA and prep sheet
# Make sure put original NDA structure at first, because the order of the new sheet will be the order of the first item in bind_rows function
setnames(NDA_ders_Prep, Reverse_ders_names, NDA_DERS_names)
# NDA ders name
ders <- "ders"
number_of_survey <- seq(1:36)
NDA_DERS_names <- paste(ders,number_of_survey,sep = '')
# Clean global Environment
rm(old_UO_ders_names, old_UPMC_ders_names, number_of_survey)
# Combine NDA and prep sheet
# Make sure put original NDA structure at first, because the order of the new sheet will be the order of the first item in bind_rows function
setnames(NDA_ders_Prep, Reverse_ders_names, NDA_DERS_names)
# Recreate first line in orignial NDA file
# Make a empty row, with same number of column in NDA_ders, as first line of NDA sheet
NDA_ders[1,] <- NA
# NDA Sheet
# Create NDA prep sheet, select all the needed columns from prep sheet
NDA_ders <- select(Qualtrics, c(subjectkey= child_guid, src_subject_id= child_famID,  sex = child_sex  ,interview_age_child, interview_date, starts_with("srm_ders")))
# Combine NDA and prep sheet
# Make sure put original NDA structure at first, because the order of the new sheet will be the order of the first item in bind_rows function
setnames(NDA_ders, Reverse_ders_names, NDA_DERS_names)
# Recreate first line in orignial NDA file
# Make a empty row, with same number of column in NDA_ders, as first line of NDA sheet
NDA_ders[1,] <- NA
# ncol(NDA_ders)  is number of columns in NDA_ders
NDA_ders <- bind_rows(NDA_ders,NDA_ders_Prep)
# Recreate first line in orignial NDA file
# Make a empty row, with same number of column in NDA_ders, as first line of NDA sheet
# ncol(NDA_ders)  is number of columns in NDA_ders
first_line <- matrix("", nrow = 1, ncol = ncol(NDA_ders))
# assign the firt cell in first_line as ders which is the first cell in orignial NDA structure
first_line[,1] <- "ders"
# assign the second cell in first_lineas ders
first_line[,2] <- "1"
# NDA output ####
# Create a new file in folder called ders.csv, and put first line into this file
# ders.csv file will be saved into same folder as current r script
write.table(first_line, file = "ders.csv", sep = ",", append = FALSE, quote = FALSE, na = "", col.names = FALSE, row.names = FALSE)
# Append data in NDA_ders into ders.cav file
write.table(NDA_ders, file = 'ders.csv', sep = ",", append = TRUE, na = "", quote = FALSE, row.names = FALSE)
View(NDA_ders)
source("~/Documents/GitHub/DataUploadAutomation/Upload and Tables/Data/Upload Preparation.R")
Qualtrics <- select(Qualtrics, c(Fam_ID, child_guid, child_famID, interview_date, interview_age_child, child_sex, GroupAssignment, Timepoint = Timepoint, contains("srm_ders")))
Qualtrics <- Qualtrics %>%
mutate_at(new_ders_names,
funs(recode(., "Almost Never (0-10%)" = 1,
"Sometimes (11%-35%)" = 2,
"About half the time (36%-65%)" = 3,
"Most of the time (66-90%)" = 4,
"Almost Always (91-100%)" = 5)))
# Rename the reverse scored columns
Reverse_ders_names <- new_ders_names
revers_ders_cols <- c("srm_ders_1", "srm_ders_2", "srm_ders_6", "srm_ders_7", "srm_ders_8", "srm_ders_10",
"srm_ders_17", "srm_ders_20", "srm_ders_22","srm_ders_24", "srm_ders_34")
revers_ders_cols <- paste(revers_ders_cols, "r", sep = "")
Reverse_ders_names[c(1,2,6,7,8,10,17,20,22,24,34)] <- revers_ders_cols
setnames(Qualtrics, new_ders_names, Reverse_ders_names)
# Reverse score certain items
Qualtrics[,revers_ders_cols] = 6 - Qualtrics[,revers_ders_cols]
# Recode UO groupassignment
Qualtrics <- Qualtrics %>%
mutate_at(c("GroupAssignment"),
funs(recode(., "Assigned Group 3 (HC)" = "Healthy",
'Assigned Group 2 (FSU)' = "NO DBT",
'Assigned Group 1 (DBT)' = "DBT")))
# Calculated awareness
Qualtrics <- add_column(Qualtrics,
DERS_awareness_imputation = varScore(Qualtrics, Forward =
c("srm_ders_2r", "srm_ders_6r", "srm_ders_8r",
"srm_ders_10r","srm_ders_17r", "srm_ders_34r"),
MaxMiss = .02), .after = "srm_ders_36")
# Calculated clarity
Qualtrics <- add_column(Qualtrics,
DERS_clarity_imputation = varScore(Qualtrics, Forward =
c("srm_ders_1r", "srm_ders_4", "srm_ders_5",
"srm_ders_7r", "srm_ders_9"),MaxMiss = .02),
.after = "DERS_awareness_imputation")
# Calculated goals
Qualtrics <- add_column(Qualtrics,
DERS_goals_imputation = varScore(Qualtrics, Forward =
c("srm_ders_13", "srm_ders_18", "srm_ders_20r",
"srm_ders_26", "srm_ders_33"),MaxMiss = .02),
.after = "DERS_clarity_imputation")
# Calculated impulse
Qualtrics <- add_column(Qualtrics,
DERS_impulse_imputation = varScore(Qualtrics, Forward =
c("srm_ders_3", "srm_ders_14", "srm_ders_19",
"srm_ders_24r", "srm_ders_27", "srm_ders_32"),MaxMiss = .02), .after = "DERS_goals_imputation")
# Calculated nonacceptance
Qualtrics <- add_column(Qualtrics,
DERS_nonacceptance_imputation = varScore(Qualtrics, Forward =
c("srm_ders_11", "srm_ders_12", "srm_ders_21",
"srm_ders_23", "srm_ders_25", "srm_ders_29"),MaxMiss = .02), .after = "DERS_impulse_imputation")
# Calculated strategies
Qualtrics <- add_column(Qualtrics,
DERS_strategies_imputation = varScore(Qualtrics, Forward =
c("srm_ders_15", "srm_ders_16", "srm_ders_22r",
"srm_ders_28", "srm_ders_30", "srm_ders_31",
"srm_ders_35", "srm_ders_36"),MaxMiss = .02),
.after = "DERS_nonacceptance_imputation")
# Calculated total
Qualtrics <- add_column(Qualtrics, DERS_total_imputation = varScore(Qualtrics, Forward =  select(Qualtrics,c(starts_with("srm_ders"))),MaxMiss = .02), .after = "DERS_strategies_imputation")
# NDA Sheet
# Create NDA prep sheet, select all the needed columns from prep sheet
NDA_ders <- select(Qualtrics, c(subjectkey= child_guid, src_subject_id= child_famID,  sex = child_sex  ,interview_age_child, interview_date, starts_with("srm_ders")))
# Combine NDA and prep sheet
# Make sure put original NDA structure at first, because the order of the new sheet will be the order of the first item in bind_rows function
setnames(NDA_ders, Reverse_ders_names, NDA_DERS_names)
# Recreate first line in orignial NDA file
# Make a empty row, with same number of column in NDA_ders, as first line of NDA sheet
NDA_ders[1,] <- NA
# ncol(NDA_ders)  is number of columns in NDA_ders
NDA_ders <- bind_rows(NDA_ders,NDA_ders_Prep)
# NDA Sheet
# Create NDA prep sheet, select all the needed columns from prep sheet
NDA_ders_Prep <- select(Qualtrics, c(subjectkey= child_guid, src_subject_id= child_famID,  sex = child_sex  ,interview_age_child, interview_date, starts_with("srm_ders")))
# Combine NDA and prep sheet
# Make sure put original NDA structure at first, because the order of the new sheet will be the order of the first item in bind_rows function
setnames(NDA_ders_Prep, Reverse_ders_names, NDA_DERS_names)
# Recreate first line in orignial NDA file
# Make a empty row, with same number of column in NDA_ders, as first line of NDA sheet
NDA_ders[1,] <- NA
# ncol(NDA_ders)  is number of columns in NDA_ders
NDA_ders <- bind_rows(NDA_ders,NDA_ders_Prep)
# Recreate first line in orignial NDA file
# Make a empty row, with same number of column in NDA_ders, as first line of NDA sheet
# ncol(NDA_ders)  is number of columns in NDA_ders
first_line <- matrix("", nrow = 1, ncol = ncol(NDA_ders))
# assign the firt cell in first_line as ders which is the first cell in orignial NDA structure
first_line[,1] <- "ders"
# assign the second cell in first_lineas ders
first_line[,2] <- "1"
# NDA output ####
# Create a new file in folder called ders.csv, and put first line into this file
# ders.csv file will be saved into same folder as current r script
write.table(first_line, file = "ders.csv", sep = ",", append = FALSE, quote = FALSE, na = "", col.names = FALSE, row.names = FALSE)
# Append data in NDA_ders into ders.cav file
write.table(NDA_ders, file = 'ders.csv', sep = ",", append = TRUE, na = "", quote = FALSE, row.names = FALSE)
source("~/Documents/GitHub/DataUploadAutomation/Upload and Tables/Scripts/CCNES_Upload_Script.R")
