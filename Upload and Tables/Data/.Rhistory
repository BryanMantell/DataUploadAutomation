Six_Digit_Pin <- (sample(200000:299999, 120, replace = FALSE))
Three_Digit_Subject_ID_1 <- (sample(400:520, 120, replace = FALSE))
Three_Digit_Subject_ID_2 <- (sample(600:720, 120, replace = FALSE))
Subject_List <- cbind(Six_Digit_Pin, Three_Digit_Subject_ID_1, Three_Digit_Subject_ID_2)
View(Subject_List)
install.packages(dplyr)
install.packages("tidyverse")
knitr::opts_chunk$set(echo = TRUE)
install.packages("tidyverse")
library(dplyr)
arrange(Subject_List)
arrange(Subject_List, by = FALSE)
View(Subject_List)
Subject_List <- arrange(Three_Digit_Subject_ID_1, Three_Digit_Subject_ID_2, by_group = FALSE)
Subject_List <- arrange(Three_Digit_Subject_ID_1, Three_Digit_Subject_ID_2, value)
knitr::opts_chunk$set(echo = TRUE)
Six_Digit_Pin <- (sample(200000:299999, 120, replace = FALSE))
Three_Digit_Subject_ID_1 <- (sample(400:520, 120, replace = FALSE))
Three_Digit_Subject_ID_2 <- (sample(600:720, 120, replace = FALSE))
Subject_List <- rbind(Six_Digit_Pin, Three_Digit_Subject_ID_1, Three_Digit_Subject_ID_2)
View(Subject_List)
knitr::opts_chunk$set(echo = TRUE)
Six_Digit_Pin <- (sample(200000:299999, 120, replace = FALSE))
Three_Digit_Subject_ID_1 <- (sample(400:520, 120, replace = FALSE))
Three_Digit_Subject_ID_2 <- (sample(600:720, 120, replace = FALSE))
Subject_List <- rbind(Six_Digit_Pin, Three_Digit_Subject_ID_1, Three_Digit_Subject_ID_2)
View(Subject_List)
knitr::opts_chunk$set(echo = TRUE)
Six_Digit_Pin <- (sample(200000:299999, 120, replace = FALSE))
Three_Digit_Subject_ID_1 <- (sample(400:520, 120, replace = FALSE))
Three_Digit_Subject_ID_2 <- (sample(600:720, 120, replace = FALSE))
Subject_List <- cbind(Six_Digit_Pin, Three_Digit_Subject_ID_1, Three_Digit_Subject_ID_2)
View(Subject_List)
knitr::opts_chunk$set(echo = TRUE)
Six_Digit_Pin <- (sample(200000:299999, 120, replace = FALSE))
Three_Digit_Subject_ID_1 <- (sample(400:520, 120, replace = FALSE))
Three_Digit_Subject_ID_2 <- (sample(600:720, 120, replace = FALSE))
Subject_List <- cbind(Six_Digit_Pin, Three_Digit_Subject_ID_1, Three_Digit_Subject_ID_2)
write.csv(Subject_List)
knitr::opts_chunk$set(echo = TRUE)
Six_Digit_Pin <- (sample(200000:299999, 120, replace = FALSE))
Three_Digit_Subject_ID_1 <- (sample(400:520, 120, replace = FALSE))
Three_Digit_Subject_ID_2 <- (sample(600:720, 120, replace = FALSE))
Subject_List <- cbind(Six_Digit_Pin, Three_Digit_Subject_ID_1, Three_Digit_Subject_ID_2)
write.csv(Subject_List, file = "SUBJECT_ID_LIST.csv")
# Loading library
##library(dplyr)
##library(tidyverse)
##library(data.table)
##library(kableExtra)
##library(knitr)
# Settings for knit the whole document
# Note that the `echo = FALSE` parameter was added to the code chunk to prevent printing of the R code that generated the plot.
knitr::opts_chunk$set(echo = TRUE)
# Scientific notation, round up to 3 digits
options(digits = 3)
source("Upload Preparation.R")
library(lmSupport)
NDA_WCCL <- read.csv("dbt_wccl01_template.csv", skip = 1)
source("Upload Preparation.R")
# Loading library
##library(dplyr)
##library(tidyverse)
##library(data.table)
##library(kableExtra)
##library(knitr)
# Settings for knit the whole document
# Note that the `echo = FALSE` parameter was added to the code chunk to prevent printing of the R code that generated the plot.
knitr::opts_chunk$set(echo = TRUE)
# Scientific notation, round up to 3 digits
options(digits = 3)
source("Upload Preparation.R")
source("Upload Preparation.R")
source("Upload Preparation.R")
source("Upload Preparation.R")
source("Upload Preparation.R")
# import data frame
source("Upload Preparation.R")
source("Upload Preparation.R")
source("Upload Preparation.R")
source("Upload Preparation.R")
# Loading library
##library(dplyr)
##library(tidyverse)
##library(data.table)
##library(kableExtra)
##library(knitr)
# Settings for knit the whole document
# Note that the `echo = FALSE` parameter was added to the code chunk to prevent printing of the R code that generated the plot.
knitr::opts_chunk$set(echo = TRUE)
# Scientific notation, round up to 3 digits
options(digits = 3)
rm(list = ls())
source("Upload Preparation.R")
# Loading library
##library(dplyr)
##library(tidyverse)
##library(data.table)
##library(kableExtra)
##library(knitr)
# Settings for knit the whole document
# Note that the `echo = FALSE` parameter was added to the code chunk to prevent printing of the R code that generated the plot.
knitr::opts_chunk$set(echo = TRUE)
# Scientific notation, round up to 3 digits
options(digits = 3)
source("Upload Preparation.R")
source("Upload Preparation.R")
source("Upload Preparation.R")
source("Upload Preparation.R")
# import data frame
source("Upload Preparation.R")
source("Upload Preparation.R")
source("Upload Preparation.R")
source("Upload Preparation.R")
source("Upload Preparation.R")
rlang::last_error()
NDA_WCCL <- read.csv("dbt_wccl01_template.csv", skip = 1)
options(digits = 3)
library(lmSupport)
source("Upload Preparation.R")
source("Upload Preparation.R")
source("Upload Preparation.R")
NDA_WCCL <- read.csv("dbt_wccl01_template.csv", skip = 1)
options(digits = 3)
library(lmSupport)
View(Qualtrics)
WCCL_Prep <- select(Qualtrics, c(Fam_ID, child_guid, child_famID, interview_date, interview_age_child, child_sex, GroupAssignment, Timepoint = Timepoint, contains("srm_wccl")))
WCCL_Prep <- select(Qualtrics, c(Fam_ID, mother_FamID, mom_guid, mother_sex, interview_date, interview_age, contains("srm_wccl")))
WCCL_Prep <- select(Qualtrics, c(Fam_ID, FamID_Mother, mom_guid, mother_sex, interview_date, interview_age, contains("srm_wccl")))
source("Upload Preparation.R")
NDA_WCCL <- read.csv("dbt_wccl01_template.csv", skip = 1)
options(digits = 3)
library(lmSupport)
WCCL_Prep <- select(Qualtrics, c(Fam_ID, mom_guid, mother_sex, interview_date, interview_age, contains("srm_wccl")))
View(Qualtrics)
# import data frame
source("Upload Preparation.R")
NDA_WCCL <- read.csv("dbt_wccl01_template.csv", skip = 1)
options(digits = 3)
library(lmSupport)
WCCL_Prep <- select(Qualtrics, c(Fam_ID, mom_guid, mother_sex, interview_date, interview_age, contains("srm_wccl")))
WCCL_Prep <- select(Qualtrics, c(Fam_ID,mother_sex, interview_date, interview_age, contains("srm_wccl")))
WCCL_Prep <- select(Qualtrics, c(Fam_ID,mother_sex, interview_date, interview_age_Mom, contains("srm_wccl")))
View(WCCL_Prep)
SU <- colnames(select(WCCL_Prep, c("srm_wccl_1", "srm_wccl_2", "srm_wccl_4", "srm_wccl_6", "srm_wccl_9", "srm_wccl_10", "srm_wccl_11", "srm_wccl_13", "srm_wccl_16", "srm_wccl_18", "srm_wccl_19", "srm_wccl_21", "srm_wccl_22", "srm_wccl_23", "srm_wccl_26", "srm_wccl_27", "srm_wccl_29", "srm_wccl_31", "srm_wccl_33", "srm_wccl_34", "srm_wccl_35", "srm_wccl_36", "srm_wccl_38", "srm_wccl_39", "srm_wccl_40", "srm_wccl_42", "srm_wccl_43", "srm_wccl_44", "srm_wccl_47", "srm_wccl_49", "srm_wccl_50", "srm_wccl_51", "srm_wccl_53", "srm_wccl_54", "srm_wccl_56", "srm_wccl_57", "srm_wccl_58", "srm_wccl_59")))
WCCL_Prep$wccl_SU_raw <- rowMeans(WCCL_Prep[,SU], na.rm = TRUE)
WCCL_Prep[,5:76] <- sapply(WCCL_Prep[,5:76],as.numeric)
WCCL_Prep[,5:63] <- sapply(WCCL_Prep[,5:63],as.numeric)
View(WCCL_Prep)
SU <- colnames(select(WCCL_Prep, c("srm_wccl_1", "srm_wccl_2", "srm_wccl_4", "srm_wccl_6", "srm_wccl_9", "srm_wccl_10", "srm_wccl_11", "srm_wccl_13", "srm_wccl_16", "srm_wccl_18", "srm_wccl_19", "srm_wccl_21", "srm_wccl_22", "srm_wccl_23", "srm_wccl_26", "srm_wccl_27", "srm_wccl_29", "srm_wccl_31", "srm_wccl_33", "srm_wccl_34", "srm_wccl_35", "srm_wccl_36", "srm_wccl_38", "srm_wccl_39", "srm_wccl_40", "srm_wccl_42", "srm_wccl_43", "srm_wccl_44", "srm_wccl_47", "srm_wccl_49", "srm_wccl_50", "srm_wccl_51", "srm_wccl_53", "srm_wccl_54", "srm_wccl_56", "srm_wccl_57", "srm_wccl_58", "srm_wccl_59")))
WCCL_Prep$wccl_SU_raw <- rowMeans(WCCL_Prep[,SU], na.rm = TRUE)
View(WCCL_Prep)
WCCL_Prep <- add_column(WCCL_Prep, WCCL_SU_imputation = varScore(WCCL_Prep, Forward = c("srm_wccl_1", "srm_wccl_2", "srm_wccl_4", "srm_wccl_6", "srm_wccl_9", "srm_wccl_10", "srm_wccl_11", "srm_wccl_13", "srm_wccl_16", "srm_wccl_18", "srm_wccl_19", "srm_wccl_21", "srm_wccl_22", "srm_wccl_23", "srm_wccl_26", "srm_wccl_27", "srm_wccl_29", "srm_wccl_31", "srm_wccl_33", "srm_wccl_34", "srm_wccl_35", "srm_wccl_36", "srm_wccl_38", "srm_wccl_39", "srm_wccl_40", "srm_wccl_42", "srm_wccl_43", "srm_wccl_44", "srm_wccl_47", "srm_wccl_49", "srm_wccl_50", "srm_wccl_51", "srm_wccl_53", "srm_wccl_54", "srm_wccl_56", "srm_wccl_57", "srm_wccl_58", "srm_wccl_59"), MaxMiss = .20),.after = "wccl_SU_raw")
View(WCCL_Prep)
source("~/Documents/Min/DataUploadAutomation/Measures/Upload Preparation/Upload Preparation.R")
# Empty Global Environment
rm(list = ls())
source("Upload Preparation.R")
NDA_CBCL <- read.csv("cbcl1_501_template.csv", skip = 1)
options(digits = 3)
library(lmSupport)
# Select necessary items from qualtrics to import into CBCL
CBCL_Prep <- select(Qualtrics, c(Fam_ID, child_guid, child_famID, interview_date, interview_age_child, child_sex, GroupAssignment, Timepoint = Timepoint, contains("srm_cbcl")))
# Create a list of names to be targeted
New_CBCL_Names <- sprintf("srm_cbcl_%03d", seq(1:100))
# Recode text responses into numbers so they can be used in calculations
CBCL_Prep <- CBCL_Prep %>%
mutate_at(New_CBCL_Names,
funs(recode(., "Not True (as far as you know)" = 0,
"Somewhat or Sometimes True" = 1,
"Very True or Often True" = 2,.default = NaN)))
# Recode UPMC Group Assignment names to match UO Group Assignment names
CBCL_Prep <- CBCL_Prep %>%
mutate_at(c("GroupAssignment"),
funs(recode(., "Assigned Group 3 (HC)" = "Healthy",
'Assigned Group 2 (FSU)' = "NO DBT",
'Assigned Group 1 (DBT)' = "DBT")))
CBCL_Prep <- add_column(CBCL_Prep, cbcl_er = varScore(CBCL_Prep, Forward = c("srm_cbcl_021", "srm_cbcl_046", "srm_cbcl_051", "srm_cbcl_079", "srm_cbcl_082", "srm_cbcl_083", "srm_cbcl_092",
"srm_cbcl_097", "srm_cbcl_099"), MaxMiss = .20),.after = "srm_cbcl_100")
View(CBCL_Prep)
#Recode Text to Integers
WCCL_Prep <- WCCL_Prep %>% mutate_at(new_WCCL_names,funs(recode(., '0 Never Used' = 0, '1 Rarely Used' = 1, '2 Sometimes Used' = 2, '3 Regularly Used' = 3,.default = NaN)))
# import data frame
source("Upload Preparation.R")
NDA_WCCL <- read.csv("dbt_wccl01_template.csv", skip = 1)
options(digits = 3)
library(lmSupport)
WCCL_Prep <- select(Qualtrics, c(Fam_ID,mother_sex, interview_date, interview_age_Mom, contains("srm_wccl")))
#Recode Text to Integers
WCCL_Prep <- WCCL_Prep %>% mutate_at(new_WCCL_names,funs(recode(., '0 Never Used' = 0, '1 Rarely Used' = 1, '2 Sometimes Used' = 2, '3 Regularly Used' = 3,.default = NaN)))
# Change Numbers to Numeric values
WCCL_Prep[,5:63] <- sapply(WCCL_Prep[,5:63],as.numeric)
WCCL_Prep <- WCCL_Prep %>%
mutate_at(c("GroupAssignment"),
funs(recode(., "Assigned Group 3 (HC)" = "Healthy",
'Assigned Group 2 (FSU)' = "NO DBT",
'Assigned Group 1 (DBT)' = "DBT")))
View(Qualtrics)
WCCL_Prep <- select(Qualtrics, c(Fam_ID,mother_sex, interview_date, interview_age_Mom, GroupAssignment, contains("srm_wccl")))
WCCL_Prep <- WCCL_Prep %>%
mutate_at(c("GroupAssignment"),
funs(recode(., "Assigned Group 3 (HC)" = "Healthy",
'Assigned Group 2 (FSU)' = "NO DBT",
'Assigned Group 1 (DBT)' = "DBT")))
SU <- colnames(select(WCCL_Prep, c("srm_wccl_1", "srm_wccl_2", "srm_wccl_4", "srm_wccl_6", "srm_wccl_9", "srm_wccl_10", "srm_wccl_11", "srm_wccl_13", "srm_wccl_16", "srm_wccl_18", "srm_wccl_19", "srm_wccl_21", "srm_wccl_22", "srm_wccl_23", "srm_wccl_26", "srm_wccl_27", "srm_wccl_29", "srm_wccl_31", "srm_wccl_33", "srm_wccl_34", "srm_wccl_35", "srm_wccl_36", "srm_wccl_38", "srm_wccl_39", "srm_wccl_40", "srm_wccl_42", "srm_wccl_43", "srm_wccl_44", "srm_wccl_47", "srm_wccl_49", "srm_wccl_50", "srm_wccl_51", "srm_wccl_53", "srm_wccl_54", "srm_wccl_56", "srm_wccl_57", "srm_wccl_58", "srm_wccl_59")))
# Items for GSC
GSC <- colnames(select(WCCL_Prep, c("srm_wccl_3", "srm_wccl_5", "srm_wccl_8", "srm_wccl_12", "srm_wccl_14", "srm_wccl_17", "srm_wccl_20", "srm_wccl_25", "srm_wccl_32", "srm_wccl_37", "srm_wccl_41", "srm_wccl_45", "srm_wccl_46", "srm_wccl_52", "srm_wccl_55")))
# Items for BO
BO <- colnames(select(WCCL_Prep, c("srm_wccl_7", "srm_wccl_15", "srm_wccl_24", "srm_wccl_28", "srm_wccl_30", "srm_wccl_48")))
# Calculated Columns
WCCL_Prep$wccl_SU_raw <- rowMeans(WCCL_Prep[,SU], na.rm = TRUE)
View(WCCL_Prep)
WCCL_Prep[,6:63] <- sapply(WCCL_Prep[,6:63],as.numeric)
View(WCCL_Prep)
SU <- colnames(select(WCCL_Prep, c("srm_wccl_1", "srm_wccl_2", "srm_wccl_4", "srm_wccl_6", "srm_wccl_9", "srm_wccl_10", "srm_wccl_11", "srm_wccl_13", "srm_wccl_16", "srm_wccl_18", "srm_wccl_19", "srm_wccl_21", "srm_wccl_22", "srm_wccl_23", "srm_wccl_26", "srm_wccl_27", "srm_wccl_29", "srm_wccl_31", "srm_wccl_33", "srm_wccl_34", "srm_wccl_35", "srm_wccl_36", "srm_wccl_38", "srm_wccl_39", "srm_wccl_40", "srm_wccl_42", "srm_wccl_43", "srm_wccl_44", "srm_wccl_47", "srm_wccl_49", "srm_wccl_50", "srm_wccl_51", "srm_wccl_53", "srm_wccl_54", "srm_wccl_56", "srm_wccl_57", "srm_wccl_58", "srm_wccl_59")))
WCCL_Prep$wccl_SU_raw <- rowMeans(WCCL_Prep[,SU], na.rm = TRUE)
# import data frame
source("Upload Preparation.R")
NDA_WCCL <- read.csv("dbt_wccl01_template.csv", skip = 1)
options(digits = 3)
library(lmSupport)
WCCL_Prep <- select(Qualtrics, c(Fam_ID,mother_sex, interview_date, interview_age_Mom, GroupAssignment, contains("srm_wccl")))
#Recode Text to Integers
WCCL_Prep <- WCCL_Prep %>% mutate_at(new_WCCL_names,funs(recode(., '0 Never Used' = 0, '1 Rarely Used' = 1, '2 Sometimes Used' = 2, '3 Regularly Used' = 3,.default = NaN)))
# Change Numbers to Numeric values
WCCL_Prep[,6:63] <- sapply(WCCL_Prep[,6:63],as.numeric)
WCCL_Prep <- WCCL_Prep %>%
mutate_at(c("GroupAssignment"),
funs(recode(., "Assigned Group 3 (HC)" = "Healthy",
'Assigned Group 2 (FSU)' = "NO DBT",
'Assigned Group 1 (DBT)' = "DBT")))
SU <- colnames(select(WCCL_Prep, c("srm_wccl_1", "srm_wccl_2", "srm_wccl_4", "srm_wccl_6", "srm_wccl_9", "srm_wccl_10", "srm_wccl_11", "srm_wccl_13", "srm_wccl_16", "srm_wccl_18", "srm_wccl_19", "srm_wccl_21", "srm_wccl_22", "srm_wccl_23", "srm_wccl_26", "srm_wccl_27", "srm_wccl_29", "srm_wccl_31", "srm_wccl_33", "srm_wccl_34", "srm_wccl_35", "srm_wccl_36", "srm_wccl_38", "srm_wccl_39", "srm_wccl_40", "srm_wccl_42", "srm_wccl_43", "srm_wccl_44", "srm_wccl_47", "srm_wccl_49", "srm_wccl_50", "srm_wccl_51", "srm_wccl_53", "srm_wccl_54", "srm_wccl_56", "srm_wccl_57", "srm_wccl_58", "srm_wccl_59")))
# Items for GSC
GSC <- colnames(select(WCCL_Prep, c("srm_wccl_3", "srm_wccl_5", "srm_wccl_8", "srm_wccl_12", "srm_wccl_14", "srm_wccl_17", "srm_wccl_20", "srm_wccl_25", "srm_wccl_32", "srm_wccl_37", "srm_wccl_41", "srm_wccl_45", "srm_wccl_46", "srm_wccl_52", "srm_wccl_55")))
BO <- colnames(select(WCCL_Prep, c("srm_wccl_7", "srm_wccl_15", "srm_wccl_24", "srm_wccl_28", "srm_wccl_30", "srm_wccl_48")))
WCCL_Prep$wccl_SU_raw <- rowMeans(WCCL_Prep[,SU], na.rm = TRUE)
WCCL_Prep$wccl_GSC_raw <- rowMeans(WCCL_Prep[,GSC], na.rm = TRUE)
WCCL_Prep$wccl_BO_raw <- rowMeans(WCCL_Prep[,BO], na.rm = TRUE)
WCCL_Prep <- add_column(WCCL_Prep, WCCL_SU_imputation = varScore(WCCL_Prep, Forward = c("srm_wccl_1", "srm_wccl_2", "srm_wccl_4", "srm_wccl_6", "srm_wccl_9", "srm_wccl_10", "srm_wccl_11", "srm_wccl_13", "srm_wccl_16", "srm_wccl_18", "srm_wccl_19", "srm_wccl_21", "srm_wccl_22", "srm_wccl_23", "srm_wccl_26", "srm_wccl_27", "srm_wccl_29", "srm_wccl_31", "srm_wccl_33", "srm_wccl_34", "srm_wccl_35", "srm_wccl_36", "srm_wccl_38", "srm_wccl_39", "srm_wccl_40", "srm_wccl_42", "srm_wccl_43", "srm_wccl_44", "srm_wccl_47", "srm_wccl_49", "srm_wccl_50", "srm_wccl_51", "srm_wccl_53", "srm_wccl_54", "srm_wccl_56", "srm_wccl_57", "srm_wccl_58", "srm_wccl_59"), MaxMiss = .20),.after = "wccl_SU_raw")
View(WCCL_Prep)
rm(list = ls())
# Empty Global Environment
rm(list = ls())
# import data frame
source("Upload Preparation.R")
rm(list = ls())
# Empty Global Environment
rm(list = ls())
# import data frame
source("Upload Preparation.R")
NDA_WCCL <- read.csv("dbt_wccl01_template.csv", skip = 1)
options(digits = 3)
library(lmSupport)
WCCL_Prep <- select(Qualtrics, c(Fam_ID,mother_sex, interview_date, interview_age_Mom, GroupAssignment, contains("srm_wccl")))
#Recode Text to Integers
WCCL_Prep <- WCCL_Prep %>% mutate_at(new_WCCL_names,funs(recode(., '0 Never Used' = 0, '1 Rarely Used' = 1, '2 Sometimes Used' = 2, '3 Regularly Used' = 3,.default = NaN)))
# Change Numbers to Numeric values
WCCL_Prep[,6:63] <- sapply(WCCL_Prep[,6:63],as.numeric)
WCCL_Prep <- WCCL_Prep %>%
mutate_at(c("GroupAssignment"),
funs(recode(., "Assigned Group 3 (HC)" = "Healthy",
'Assigned Group 2 (FSU)' = "NO DBT",
'Assigned Group 1 (DBT)' = "DBT")))
View(WCCL_Prep)
rm(list = ls())
# Empty Global Environment
rm(list = ls())
# import data frame
source("Upload Preparation.R")
NDA_WCCL <- read.csv("dbt_wccl01_template.csv", skip = 1)
options(digits = 3)
library(lmSupport)
WCCL_Prep <- select(Qualtrics, c(Fam_ID,mother_sex, interview_date, interview_age_Mom, GroupAssignment, contains("srm_wccl")))
View(WCCL_Prep)
WCCL_Prep <- WCCL_Prep %>% mutate_at(new_WCCL_names,funs(recode(., '0 Never Used' = 0, '1 Rarely Used' = 1, '2 Sometimes Used' = 2, '3 Regularly Used' = 3,.default = NaN)))
View(WCCL_Prep)
# Empty Global Environment
rm(list = ls())
# import data frame
source("Upload Preparation.R")
NDA_WCCL <- read.csv("dbt_wccl01_template.csv", skip = 1)
options(digits = 3)
library(lmSupport)
WCCL_Prep <- select(Qualtrics, c(Fam_ID,mother_sex, interview_date, interview_age_Mom, GroupAssignment, contains("srm_wccl")))
WCCL_Prep[,6:63] <- sapply(WCCL_Prep[,6:63],as.numeric)
View(WCCL_Prep)
SU <- colnames(select(WCCL_Prep, c("srm_wccl_1", "srm_wccl_2", "srm_wccl_4", "srm_wccl_6", "srm_wccl_9", "srm_wccl_10", "srm_wccl_11", "srm_wccl_13", "srm_wccl_16", "srm_wccl_18", "srm_wccl_19", "srm_wccl_21", "srm_wccl_22", "srm_wccl_23", "srm_wccl_26", "srm_wccl_27", "srm_wccl_29", "srm_wccl_31", "srm_wccl_33", "srm_wccl_34", "srm_wccl_35", "srm_wccl_36", "srm_wccl_38", "srm_wccl_39", "srm_wccl_40", "srm_wccl_42", "srm_wccl_43", "srm_wccl_44", "srm_wccl_47", "srm_wccl_49", "srm_wccl_50", "srm_wccl_51", "srm_wccl_53", "srm_wccl_54", "srm_wccl_56", "srm_wccl_57", "srm_wccl_58", "srm_wccl_59")))
# Items for GSC
GSC <- colnames(select(WCCL_Prep, c("srm_wccl_3", "srm_wccl_5", "srm_wccl_8", "srm_wccl_12", "srm_wccl_14", "srm_wccl_17", "srm_wccl_20", "srm_wccl_25", "srm_wccl_32", "srm_wccl_37", "srm_wccl_41", "srm_wccl_45", "srm_wccl_46", "srm_wccl_52", "srm_wccl_55")))
# Items for BO
BO <- colnames(select(WCCL_Prep, c("srm_wccl_7", "srm_wccl_15", "srm_wccl_24", "srm_wccl_28", "srm_wccl_30", "srm_wccl_48")))
WCCL_Prep$wccl_SU_raw <- rowMeans(WCCL_Prep[,SU], na.rm = TRUE)
View(WCCL_Prep)
# Empty Global Environment
rm(list = ls())
# import data frame
source("Upload Preparation.R")
NDA_WCCL <- read.csv("dbt_wccl01_template.csv", skip = 1)
options(digits = 3)
library(lmSupport)
WCCL_Prep <- select(Qualtrics, c(Fam_ID,mother_sex, interview_date, interview_age_Mom, GroupAssignment, contains("srm_wccl")))
#Recode Text to Integers
#WCCL_Prep <- WCCL_Prep %>% mutate_at(new_WCCL_names,funs(recode(., '0 Never Used' = 0, '1 Rarely Used' = 1, '2 Sometimes Used' = 2, '3 Regularly Used' = 3,.default = NaN)))
# Change Numbers to Numeric values
WCCL_Prep[,6:64] <- sapply(WCCL_Prep[,6:64],as.numeric)
#WCCL_Prep <- WCCL_Prep %>%
#mutate_at(c("GroupAssignment"),
#funs(recode(., "Assigned Group 3 (HC)" = "Healthy",
'Assigned Group 2 (FSU)' = "NO DBT",
# Items for SU
SU <- colnames(select(WCCL_Prep, c("srm_wccl_1", "srm_wccl_2", "srm_wccl_4", "srm_wccl_6", "srm_wccl_9", "srm_wccl_10", "srm_wccl_11", "srm_wccl_13", "srm_wccl_16", "srm_wccl_18", "srm_wccl_19", "srm_wccl_21", "srm_wccl_22", "srm_wccl_23", "srm_wccl_26", "srm_wccl_27", "srm_wccl_29", "srm_wccl_31", "srm_wccl_33", "srm_wccl_34", "srm_wccl_35", "srm_wccl_36", "srm_wccl_38", "srm_wccl_39", "srm_wccl_40", "srm_wccl_42", "srm_wccl_43", "srm_wccl_44", "srm_wccl_47", "srm_wccl_49", "srm_wccl_50", "srm_wccl_51", "srm_wccl_53", "srm_wccl_54", "srm_wccl_56", "srm_wccl_57", "srm_wccl_58", "srm_wccl_59")))
# Items for GSC
GSC <- colnames(select(WCCL_Prep, c("srm_wccl_3", "srm_wccl_5", "srm_wccl_8", "srm_wccl_12", "srm_wccl_14", "srm_wccl_17", "srm_wccl_20", "srm_wccl_25", "srm_wccl_32", "srm_wccl_37", "srm_wccl_41", "srm_wccl_45", "srm_wccl_46", "srm_wccl_52", "srm_wccl_55")))
# Items for BO
BO <- colnames(select(WCCL_Prep, c("srm_wccl_7", "srm_wccl_15", "srm_wccl_24", "srm_wccl_28", "srm_wccl_30", "srm_wccl_48")))
# Calculated Columns
WCCL_Prep$wccl_SU_raw <- rowMeans(WCCL_Prep[,SU], na.rm = TRUE)
WCCL_Prep$wccl_GSC_raw <- rowMeans(WCCL_Prep[,GSC], na.rm = TRUE)
WCCL_Prep$wccl_BO_raw <- rowMeans(WCCL_Prep[,BO], na.rm = TRUE)
# Mean with 67% Rule####
# Check NA Percentage
WCCL_Prep$NACheck <- rowSums(is.na(select(WCCL_Prep, starts_with("srm"))))/ncol(dplyr::select(WCCL_Prep, starts_with("srm")))
# New Mean with 67% Rule
WCCL_Prep$wccl_SU_cor <- ifelse(WCCL_Prep$NACheck < 0.67, rowMeans(WCCL_Prep[,SU], na.rm = TRUE), "NA")
WCCL_Prep$wccl_GSC_cor <- ifelse(WCCL_Prep$NACheck < 0.67, rowMeans(WCCL_Prep[,GSC], na.rm = TRUE), "NA")
WCCL_Prep$wccl_BO_cor <- ifelse(WCCL_Prep$NACheck < 0.67, rowMeans(WCCL_Prep[,BO], na.rm = TRUE), "NA")
#VarScore columns
WCCL_Prep <- add_column(WCCL_Prep, WCCL_SU_imputation = varScore(WCCL_Prep, Forward = c("srm_wccl_1", "srm_wccl_2", "srm_wccl_4", "srm_wccl_6", "srm_wccl_9", "srm_wccl_10", "srm_wccl_11", "srm_wccl_13", "srm_wccl_16", "srm_wccl_18", "srm_wccl_19", "srm_wccl_21", "srm_wccl_22", "srm_wccl_23", "srm_wccl_26", "srm_wccl_27", "srm_wccl_29", "srm_wccl_31", "srm_wccl_33", "srm_wccl_34", "srm_wccl_35", "srm_wccl_36", "srm_wccl_38", "srm_wccl_39", "srm_wccl_40", "srm_wccl_42", "srm_wccl_43", "srm_wccl_44", "srm_wccl_47", "srm_wccl_49", "srm_wccl_50", "srm_wccl_51", "srm_wccl_53", "srm_wccl_54", "srm_wccl_56", "srm_wccl_57", "srm_wccl_58", "srm_wccl_59"), MaxMiss = .20),.after = "wccl_SU_raw")
View(WCCL_Prep)
# Create NDA structure column names
dbt_wccl <- paste("dbt_wccl", 1:59, sep = "")
NDA_Names <- c(dbt_wccl)
NDA_WCCL_Prep <- select(WCCL_Prep, c(subjectkey = mom_guid, src_subject_id = mother_FamID, interview_date, interview_age, sex = mother_sex , visit = Timepoint, starts_with("srm")))
rm(list = ls())
source("Upload Preparation.R")
View(Qualtrics)
View(Qualtrics)
WCCL_Prep <- select(Qualtrics, c(Fam_ID, Timepoint, subjectkey, src_subject_id, mother_sex, interview_date, interview_age_Mom, GroupAssignment, contains("srm_wccl")))
View(WCCL_Prep)
# Empty Global Environment
rm(list = ls())
# import data frame
source("Upload Preparation.R")
NDA_WCCL <- read.csv("dbt_wccl01_template.csv", skip = 1)
options(digits = 3)
library(lmSupport)
WCCL_Prep <- select(Qualtrics, c(Fam_ID, Timepoint, subjectkey, src_subject_id, mother_sex, interview_date, interview_age_Mom, GroupAssignment, contains("srm_wccl")))
WCCL_Prep[,9:84] <- sapply(WCCL_Prep[,9:84],as.numeric)
View(WCCL_Prep)
# Change Numbers to Numeric values
WCCL_Prep[,9:67] <- sapply(WCCL_Prep[,9:67],as.numeric)
View(WCCL_Prep)
# Items for SU
SU <- colnames(select(WCCL_Prep, c("srm_wccl_1", "srm_wccl_2", "srm_wccl_4", "srm_wccl_6", "srm_wccl_9", "srm_wccl_10", "srm_wccl_11", "srm_wccl_13", "srm_wccl_16", "srm_wccl_18", "srm_wccl_19", "srm_wccl_21", "srm_wccl_22", "srm_wccl_23", "srm_wccl_26", "srm_wccl_27", "srm_wccl_29", "srm_wccl_31", "srm_wccl_33", "srm_wccl_34", "srm_wccl_35", "srm_wccl_36", "srm_wccl_38", "srm_wccl_39", "srm_wccl_40", "srm_wccl_42", "srm_wccl_43", "srm_wccl_44", "srm_wccl_47", "srm_wccl_49", "srm_wccl_50", "srm_wccl_51", "srm_wccl_53", "srm_wccl_54", "srm_wccl_56", "srm_wccl_57", "srm_wccl_58", "srm_wccl_59")))
# Items for GSC
GSC <- colnames(select(WCCL_Prep, c("srm_wccl_3", "srm_wccl_5", "srm_wccl_8", "srm_wccl_12", "srm_wccl_14", "srm_wccl_17", "srm_wccl_20", "srm_wccl_25", "srm_wccl_32", "srm_wccl_37", "srm_wccl_41", "srm_wccl_45", "srm_wccl_46", "srm_wccl_52", "srm_wccl_55")))
# Items for BO
BO <- colnames(select(WCCL_Prep, c("srm_wccl_7", "srm_wccl_15", "srm_wccl_24", "srm_wccl_28", "srm_wccl_30", "srm_wccl_48")))
# Calculated Columns
WCCL_Prep$wccl_SU_raw <- rowMeans(WCCL_Prep[,SU], na.rm = TRUE)
WCCL_Prep$wccl_GSC_raw <- rowMeans(WCCL_Prep[,GSC], na.rm = TRUE)
WCCL_Prep$wccl_BO_raw <- rowMeans(WCCL_Prep[,BO], na.rm = TRUE)
# Mean with 67% Rule####
# Check NA Percentage
WCCL_Prep$NACheck <- rowSums(is.na(select(WCCL_Prep, starts_with("srm"))))/ncol(dplyr::select(WCCL_Prep, starts_with("srm")))
# New Mean with 67% Rule
WCCL_Prep$wccl_SU_cor <- ifelse(WCCL_Prep$NACheck < 0.67, rowMeans(WCCL_Prep[,SU], na.rm = TRUE), "NA")
WCCL_Prep$wccl_GSC_cor <- ifelse(WCCL_Prep$NACheck < 0.67, rowMeans(WCCL_Prep[,GSC], na.rm = TRUE), "NA")
WCCL_Prep$wccl_BO_cor <- ifelse(WCCL_Prep$NACheck < 0.67, rowMeans(WCCL_Prep[,BO], na.rm = TRUE), "NA")
#VarScore columns
WCCL_Prep <- add_column(WCCL_Prep, WCCL_SU_imputation = varScore(WCCL_Prep, Forward = c("srm_wccl_1", "srm_wccl_2", "srm_wccl_4", "srm_wccl_6", "srm_wccl_9", "srm_wccl_10", "srm_wccl_11", "srm_wccl_13", "srm_wccl_16", "srm_wccl_18", "srm_wccl_19", "srm_wccl_21", "srm_wccl_22", "srm_wccl_23", "srm_wccl_26", "srm_wccl_27", "srm_wccl_29", "srm_wccl_31", "srm_wccl_33", "srm_wccl_34", "srm_wccl_35", "srm_wccl_36", "srm_wccl_38", "srm_wccl_39", "srm_wccl_40", "srm_wccl_42", "srm_wccl_43", "srm_wccl_44", "srm_wccl_47", "srm_wccl_49", "srm_wccl_50", "srm_wccl_51", "srm_wccl_53", "srm_wccl_54", "srm_wccl_56", "srm_wccl_57", "srm_wccl_58", "srm_wccl_59"), MaxMiss = .20),.after = "wccl_BO_cor")
WCCL_Prep <- add_column(WCCL_Prep, WCCL_GSC_imputation = varScore(WCCL_Prep, Forward = c("srm_wccl_3", "srm_wccl_5", "srm_wccl_8", "srm_wccl_12", "srm_wccl_14", "srm_wccl_17", "srm_wccl_20", "srm_wccl_25", "srm_wccl_32", "srm_wccl_37", "srm_wccl_41", "srm_wccl_45", "srm_wccl_46", "srm_wccl_52", "srm_wccl_55"), MaxMiss = .20),.after = "wccl_BO_cor")
WCCL_Prep <- add_column(WCCL_Prep, WCCL_BO_imputation = varScore(WCCL_Prep, Forward = c("srm_wccl_7", "srm_wccl_15", "srm_wccl_24", "srm_wccl_28", "srm_wccl_30", "srm_wccl_48"), MaxMiss = .20),.after = "wccl_BO_cor")
View(WCCL_Prep)
dbt_wccl <- paste("dbt_wccl", 1:59, sep = "")
NDA_Names <- c(dbt_wccl)
NDA_WCCL_Prep <- select(WCCL_Prep, c(subjectkey, src_subject_id, interview_date, interview_age_Mom, sex = mother_sex , visit = Timepoint, starts_with("srm")))
setnames(NDA_WCCL_Prep, new_WCCL_names, NDA_Names)
# bind NDA_WCCL_Prep and NDA structure
NDA_WCCL <- bind_rows(NDA_WCCL, NDA_WCCL_Prep)
setnames(NDA_WCCL_Prep, new_WCCL_names, NDA_Names)
# bind NDA_WCCL_Prep and NDA structure
NDA_WCCL <- bind_rows(NDA_WCCL, NDA_WCCL_Prep)
View(NDA_WCCL_Prep)
View(WCCL_Prep)
View(NDA_WCCL_Prep)
View(WCCL_Prep)
View(NDA_WCCL)
View(NDA_WCCL_Prep)
NDA_WCCL <- bind_rows(NDA_WCCL, NDA_WCCL_Prep)
# Re-code and 67% Rule
Convert Likert Scale text input into numerical values then create a dataframe to place ID's that do not have 67% of their data present.
```{r Recode}
#Change Numbers to Numeric values
WCCL_Prep[,6:64] <- sapply(WCCL_Prep[,6:64],as.numeric)
```
```{r Calculated Columns}
# Items for SU
SU <- colnames(select(WCCL_Prep, c("srm_wccl_1", "srm_wccl_2", "srm_wccl_4", "srm_wccl_6", "srm_wccl_9", "srm_wccl_10", "srm_wccl_11", "srm_wccl_13", "srm_wccl_16", "srm_wccl_18", "srm_wccl_19", "srm_wccl_21", "srm_wccl_22", "srm_wccl_23", "srm_wccl_26", "srm_wccl_27", "srm_wccl_29", "srm_wccl_31", "srm_wccl_33", "srm_wccl_34", "srm_wccl_35", "srm_wccl_36", "srm_wccl_38", "srm_wccl_39", "srm_wccl_40", "srm_wccl_42", "srm_wccl_43", "srm_wccl_44", "srm_wccl_47", "srm_wccl_49", "srm_wccl_50", "srm_wccl_51", "srm_wccl_53", "srm_wccl_54", "srm_wccl_56", "srm_wccl_57", "srm_wccl_58", "srm_wccl_59")))
# Items for GSC
GSC <- colnames(select(WCCL_Prep, c("srm_wccl_3", "srm_wccl_5", "srm_wccl_8", "srm_wccl_12", "srm_wccl_14", "srm_wccl_17", "srm_wccl_20", "srm_wccl_25", "srm_wccl_32", "srm_wccl_37", "srm_wccl_41", "srm_wccl_45", "srm_wccl_46", "srm_wccl_52", "srm_wccl_55")))
# Items for BO
BO <- colnames(select(WCCL_Prep, c("srm_wccl_7", "srm_wccl_15", "srm_wccl_24", "srm_wccl_28", "srm_wccl_30", "srm_wccl_48")))
# Calculated Columns
WCCL_Prep$wccl_SU_raw <- rowMeans(WCCL_Prep[,SU], na.rm = TRUE)
WCCL_Prep$wccl_GSC_raw <- rowMeans(WCCL_Prep[,GSC], na.rm = TRUE)
WCCL_Prep$wccl_BO_raw <- rowMeans(WCCL_Prep[,BO], na.rm = TRUE)
# Mean with 67% Rule####
# Check NA Percentage
WCCL_Prep$NACheck <- rowSums(is.na(select(WCCL_Prep, starts_with("srm"))))/ncol(dplyr::select(WCCL_Prep, starts_with("srm")))
# New Mean with 67% Rule
WCCL_Prep$wccl_SU_cor <- ifelse(WCCL_Prep$NACheck < 0.67, rowMeans(WCCL_Prep[,SU], na.rm = TRUE), "NA")
WCCL_Prep$wccl_GSC_cor <- ifelse(WCCL_Prep$NACheck < 0.67, rowMeans(WCCL_Prep[,GSC], na.rm = TRUE), "NA")
WCCL_Prep$wccl_BO_cor <- ifelse(WCCL_Prep$NACheck < 0.67, rowMeans(WCCL_Prep[,BO], na.rm = TRUE), "NA")
#VarScore columns
WCCL_Prep <- add_column(WCCL_Prep, WCCL_SU_imputation = varScore(WCCL_Prep, Forward = c("srm_wccl_1", "srm_wccl_2", "srm_wccl_4", "srm_wccl_6", "srm_wccl_9", "srm_wccl_10", "srm_wccl_11", "srm_wccl_13", "srm_wccl_16", "srm_wccl_18", "srm_wccl_19", "srm_wccl_21", "srm_wccl_22", "srm_wccl_23", "srm_wccl_26", "srm_wccl_27", "srm_wccl_29", "srm_wccl_31", "srm_wccl_33", "srm_wccl_34", "srm_wccl_35", "srm_wccl_36", "srm_wccl_38", "srm_wccl_39", "srm_wccl_40", "srm_wccl_42", "srm_wccl_43", "srm_wccl_44", "srm_wccl_47", "srm_wccl_49", "srm_wccl_50", "srm_wccl_51", "srm_wccl_53", "srm_wccl_54", "srm_wccl_56", "srm_wccl_57", "srm_wccl_58", "srm_wccl_59"), MaxMiss = .20),.after = "wccl_BO_cor")
WCCL_Prep <- add_column(WCCL_Prep, WCCL_GSC_imputation = varScore(WCCL_Prep, Forward = c("srm_wccl_3", "srm_wccl_5", "srm_wccl_8", "srm_wccl_12", "srm_wccl_14", "srm_wccl_17", "srm_wccl_20", "srm_wccl_25", "srm_wccl_32", "srm_wccl_37", "srm_wccl_41", "srm_wccl_45", "srm_wccl_46", "srm_wccl_52", "srm_wccl_55"), MaxMiss = .20),.after = "wccl_BO_cor")
WCCL_Prep <- add_column(WCCL_Prep, WCCL_BO_imputation = varScore(WCCL_Prep, Forward = c("srm_wccl_7", "srm_wccl_15", "srm_wccl_24", "srm_wccl_28", "srm_wccl_30", "srm_wccl_48"), MaxMiss = .20),.after = "wccl_BO_cor")
```
```{r NDA Sheet}
# Create NDA structure column names
dbt_wccl <- paste("dbt_wccl", 1:59, sep = "")
NDA_Names <- c(dbt_wccl)
# Create NDA Prep structure
NDA_WCCL_Prep <- select(WCCL_Prep, c(subjectkey, src_subject_id, interview_date, interview_age_Mom, sex = mother_sex , visit = Timepoint, starts_with("srm")))
setnames(NDA_WCCL_Prep, new_WCCL_names, NDA_Names)
# bind NDA_WCCL_Prep and NDA structure
NDA_WCCL <- bind_rows(NDA_WCCL, NDA_WCCL_Prep)
# recreate first row of NDA structure
first_line <- matrix("", nrow = 1, ncol = ncol(NDA_WCCL))
NDA_WCCL <- bind_rows(NDA_WCCL, NDA_WCCL_Prep)
first_line <- matrix("", nrow = 1, ncol = ncol(NDA_WCCL))
first_line[,1] <- "dbt_wccl"
first_line[,2] <- "1"
write.table(first_line, file = "dbt_wccl.csv", sep = ",", append = FALSE, quote = FALSE, na = "", col.names = TRUE, row.names = FALSE)
write.table(NDA_WCCL, file = "dbt_wccl.csv", sep = ",", append = FALSE, quote = FALSE, na = "", col.names = TRUE, row.names = FALSE)
```
# Re-code and 67% Rule
Convert Likert Scale text input into numerical values then create a dataframe to place ID's that do not have 67% of their data present.
```{r Recode}
#Change Numbers to Numeric values
WCCL_Prep[,6:64] <- sapply(WCCL_Prep[,6:64],as.numeric)
```
```{r Calculated Columns}
# Items for SU
SU <- colnames(select(WCCL_Prep, c("srm_wccl_1", "srm_wccl_2", "srm_wccl_4", "srm_wccl_6", "srm_wccl_9", "srm_wccl_10", "srm_wccl_11", "srm_wccl_13", "srm_wccl_16", "srm_wccl_18", "srm_wccl_19", "srm_wccl_21", "srm_wccl_22", "srm_wccl_23", "srm_wccl_26", "srm_wccl_27", "srm_wccl_29", "srm_wccl_31", "srm_wccl_33", "srm_wccl_34", "srm_wccl_35", "srm_wccl_36", "srm_wccl_38", "srm_wccl_39", "srm_wccl_40", "srm_wccl_42", "srm_wccl_43", "srm_wccl_44", "srm_wccl_47", "srm_wccl_49", "srm_wccl_50", "srm_wccl_51", "srm_wccl_53", "srm_wccl_54", "srm_wccl_56", "srm_wccl_57", "srm_wccl_58", "srm_wccl_59")))
# Items for GSC
GSC <- colnames(select(WCCL_Prep, c("srm_wccl_3", "srm_wccl_5", "srm_wccl_8", "srm_wccl_12", "srm_wccl_14", "srm_wccl_17", "srm_wccl_20", "srm_wccl_25", "srm_wccl_32", "srm_wccl_37", "srm_wccl_41", "srm_wccl_45", "srm_wccl_46", "srm_wccl_52", "srm_wccl_55")))
# Items for BO
BO <- colnames(select(WCCL_Prep, c("srm_wccl_7", "srm_wccl_15", "srm_wccl_24", "srm_wccl_28", "srm_wccl_30", "srm_wccl_48")))
# Calculated Columns
WCCL_Prep$wccl_SU_raw <- rowMeans(WCCL_Prep[,SU], na.rm = TRUE)
WCCL_Prep$wccl_GSC_raw <- rowMeans(WCCL_Prep[,GSC], na.rm = TRUE)
WCCL_Prep$wccl_BO_raw <- rowMeans(WCCL_Prep[,BO], na.rm = TRUE)
# Mean with 67% Rule####
# Check NA Percentage
WCCL_Prep$NACheck <- rowSums(is.na(select(WCCL_Prep, starts_with("srm"))))/ncol(dplyr::select(WCCL_Prep, starts_with("srm")))
# New Mean with 67% Rule
WCCL_Prep$wccl_SU_cor <- ifelse(WCCL_Prep$NACheck < 0.67, rowMeans(WCCL_Prep[,SU], na.rm = TRUE), "NA")
WCCL_Prep$wccl_GSC_cor <- ifelse(WCCL_Prep$NACheck < 0.67, rowMeans(WCCL_Prep[,GSC], na.rm = TRUE), "NA")
WCCL_Prep$wccl_BO_cor <- ifelse(WCCL_Prep$NACheck < 0.67, rowMeans(WCCL_Prep[,BO], na.rm = TRUE), "NA")
#VarScore columns
WCCL_Prep <- add_column(WCCL_Prep, WCCL_SU_imputation = varScore(WCCL_Prep, Forward = c("srm_wccl_1", "srm_wccl_2", "srm_wccl_4", "srm_wccl_6", "srm_wccl_9", "srm_wccl_10", "srm_wccl_11", "srm_wccl_13", "srm_wccl_16", "srm_wccl_18", "srm_wccl_19", "srm_wccl_21", "srm_wccl_22", "srm_wccl_23", "srm_wccl_26", "srm_wccl_27", "srm_wccl_29", "srm_wccl_31", "srm_wccl_33", "srm_wccl_34", "srm_wccl_35", "srm_wccl_36", "srm_wccl_38", "srm_wccl_39", "srm_wccl_40", "srm_wccl_42", "srm_wccl_43", "srm_wccl_44", "srm_wccl_47", "srm_wccl_49", "srm_wccl_50", "srm_wccl_51", "srm_wccl_53", "srm_wccl_54", "srm_wccl_56", "srm_wccl_57", "srm_wccl_58", "srm_wccl_59"), MaxMiss = .20),.after = "wccl_BO_cor")
WCCL_Prep <- add_column(WCCL_Prep, WCCL_GSC_imputation = varScore(WCCL_Prep, Forward = c("srm_wccl_3", "srm_wccl_5", "srm_wccl_8", "srm_wccl_12", "srm_wccl_14", "srm_wccl_17", "srm_wccl_20", "srm_wccl_25", "srm_wccl_32", "srm_wccl_37", "srm_wccl_41", "srm_wccl_45", "srm_wccl_46", "srm_wccl_52", "srm_wccl_55"), MaxMiss = .20),.after = "wccl_BO_cor")
WCCL_Prep <- add_column(WCCL_Prep, WCCL_BO_imputation = varScore(WCCL_Prep, Forward = c("srm_wccl_7", "srm_wccl_15", "srm_wccl_24", "srm_wccl_28", "srm_wccl_30", "srm_wccl_48"), MaxMiss = .20),.after = "wccl_BO_cor")
```
```{r NDA Sheet}
# Create NDA structure column names
dbt_wccl <- paste("dbt_wccl", 1:59, sep = "")
NDA_Names <- c(dbt_wccl)
# Create NDA Prep structure
NDA_WCCL_Prep <- select(WCCL_Prep, c(subjectkey, src_subject_id, interview_date, interview_age_Mom, sex = mother_sex , visit = Timepoint, starts_with("srm")))
setnames(NDA_WCCL_Prep, new_WCCL_names, NDA_Names)
# bind NDA_WCCL_Prep and NDA structure
NDA_WCCL <- bind_rows(NDA_WCCL, NDA_WCCL_Prep)
# recreate first row of NDA structure
first_line <- matrix("", nrow = 1, ncol = ncol(NDA_WCCL))
NDA_WCCL <- bind_rows(NDA_WCCL, NDA_WCCL_Prep)
first_line <- matrix("", nrow = 1, ncol = ncol(NDA_WCCL))
first_line[,1] <- "dbt_wccl"
first_line[,2] <- "1"
write.table(first_line, file = "dbt_wccl.csv", sep = ",", append = FALSE, quote = FALSE, na = "", col.names = TRUE, row.names = FALSE)
write.table(NDA_WCCL, file = "dbt_wccl.csv", sep = ",", append = FALSE, quote = FALSE, na = "", col.names = TRUE, row.names = FALSE)
```
source("Upload Preparation.R")
source("Upload Preparation.R")
source("Upload Preparation.R")
source("Upload Preparation.R")
source("~/Documents/GitHub/DataUploadAutomation/DataUploadAutomation/Upload and Tables/Data/Upload Preparation.R")
source("C:\Users\kmurr\OneDrive\Documents\GitHub\DataUploadAutomation\Measures\WCCL\Upload Preparation.R")
source("C:/Users/kmurr/OneDrive/Documents/GitHub/DataUploadAutomation/Measures/WCCL/Upload Preparation.R")
source("Upload Preparation.R")
source("~/Documents/kmurr/DataUploadAutomation/Upload and Tables/Data/Upload Preparation.R")
source("\\DESKTOP-JLQCFEN\Users\kmurr\OneDrive\Documents\GitHub\DataUploadAutomation\Upload and Tables\Data\Upload Preparation.R")
source(C:/Users/kmurr/OneDrive/Documents/GitHub/DataUploadAutomation/Upload and Tables/Scripts)
source(C:Users/kmurr/OneDrive/Documents/GitHub/DataUploadAutomation/UploadandTables/Scripts)
source(C:/Users/kmurr/OneDrive/Documents/GitHub/DataUploadAutomation/UploadandTables/Scripts)
source(C:\Users/kmurr/OneDrive/Documents/GitHub/DataUploadAutomation/UploadandTables/Scripts)
source('~/GitHub/DataUploadAutomation/Upload and Tables/Scripts/WCCL_Upload_Script.R')
source(C:~/Users/kmurr/OneDrive/Documents/GitHub/DataUploadAutomation/UploadandTables/Scripts)
source("~/GitHub/DataUploadAutomation/Upload and Tables/Data/Upload Preparation.R")
source("~/GitHub/DataUploadAutomation/Upload and Tables/Data/Upload Preparation.R")
source("~/GitHub/DataUploadAutomation/Upload and Tables/Scripts/WCCL_Upload_Script.R")
View(NDA_WCCL)
source("~/GitHub/DataUploadAutomation/Upload and Tables/Scripts/CBCL_Upload_Script.R")
source("~/GitHub/DataUploadAutomation/Upload and Tables/Scripts/WCCL_Upload_Script.R")
setwd("~/GitHub/DataUploadAutomation/Upload and Tables/Data")
source("~/GitHub/DataUploadAutomation/Upload and Tables/Data/Upload Preparation.R")
source("~/GitHub/DataUploadAutomation/Upload and Tables/Scripts/WCCL_Upload_Script.R")
source("~/GitHub/DataUploadAutomation/Upload and Tables/Scripts/PPVT_Upload_Script.R")
source("~/GitHub/DataUploadAutomation/Upload and Tables/Scripts/CBCL_Upload_Script.R")
source("~/GitHub/DataUploadAutomation/Upload and Tables/Scripts/WCCL_Upload_Script.R")
