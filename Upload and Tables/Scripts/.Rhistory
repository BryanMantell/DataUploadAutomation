source("Upload Preparation.R")
NDA_PPVT <- read.csv("ppvt_4a02_template.csv", skip = 1, stringsAsFactors = FALSE)
UPMC_PPVT_Data <- read.csv("UPMC_PPVT_Data.csv", stringsAsFactors = FALSE)
# Redcap column names for locating old names to be replaced with Prep names and NDA names
PPVT_names <- c("om_ppvt_rs", "om_ppvt_ss", "oc_ppvt_rs", "oc_ppvt_ss")
NDA_PPVT_names <- c("ss_rawscore", "ss_standardscore")
# Select needed columns and rename in Redcap_Data & UPMC_PPVT_Data, then merge the two timepoints together
Redcap_Data <- select(Redcap_Data, c(Fam_ID, om_ppvt_rs, om_ppvt_ss, oc_ppvt_rs, oc_ppvt_ss))
UPMC_PPVT_Data <- select(UPMC_PPVT_Data, c(Fam_ID = STEADY.ID., om_ppvt_rs = Parent.PPVT.Raw.Score, om_ppvt_ss = Parent.PPVT.Standard.Score, oc_ppvt_rs = Child.PPVT.Raw.Score, oc_ppvt_ss = Child.PPVT.Standard.Score))
PPVT_BothSite_Data <- rbind(Redcap_Data, UPMC_PPVT_Data)
# Select revelent pedigree information, rename as needed.
Pedigree_Prep <- data.frame(select(Pedigree, Fam_ID, child_guid, subjectkey, child_famID, src_subject_id, interview_date, interview_age_Mom, interview_age_child, child_sex, sex_mother, GroupAssignment), Timepoint = 1)
# Merge Predigree and redcap files
PPVT_PREP <- merge(Pedigree_Prep, PPVT_BothSite_Data,by = c("Fam_ID"), all = TRUE)
# Clean Environment
rm(Pedigree, Pedigree_Prep, Redcap_Data, PPVT_BothSite_Data, UPMC_PPVT_Data)
# Create NDA prep sheet for mom and child data, select all the needed columns from prep sheet
NDA_PPVT_Prep_Child <- select(PPVT_PREP, c(subjectkey = child_guid, src_subject_id = child_famID, interview_date, interview_age = interview_age_child, sex = child_sex, ss_rawscore = oc_ppvt_rs, ss_standardscore = oc_ppvt_ss, visit = Timepoint))
NDA_PPVT_Prep_Mom <- select(PPVT_PREP, c(subjectkey, src_subject_id, interview_date, interview_age = interview_age_Mom, sex = sex_mother, ss_rawscore = om_ppvt_rs, ss_standardscore = om_ppvt_ss, visit = Timepoint))
# Remove duplicate data from mom and child prep sheets
NDA_PPVT_Prep_Child <- na.omit(NDA_PPVT_Prep_Child, ss_rawscore)
NDA_PPVT_Prep_Mom <- na.omit(NDA_PPVT_Prep_Mom, ss_rawscore)
# Bind child and mom data into one data frame and order by ID
NDA_PPVT_Prep <- rbind(NDA_PPVT_Prep_Child, NDA_PPVT_Prep_Mom)
# Arrange PPVT data so Mother and Child subjectkeys are next to each other for readability.
NDA_PPVT_Prep <- arrange(NDA_PPVT_Prep, src_subject_id)
# Solution Testing for error
#NDA_PPVT <- bind_rows(NDA_PPVT, NDA_PPVT_Prep)
#NDA_PPVT[, c("subjectkey")] <- sapply(NDA_PPVT[, c("subjectkey")], as.character)
#NDA_PPVT_Prep[, c("subjectkey")] <- sapply(NDA_PPVT_Prep[, c("subjectkey")], as.character)
# Recreate first line in orignial NDA file (rbind should be bind_rows, temporary fix due to errors)
NDA_PPVT <- rbind(NDA_PPVT, NDA_PPVT_Prep)
first_line <- matrix("", nrow = 1, ncol = ncol(NDA_PPVT))
first_line[,1] <- "ppvt_4a"
# assign the second cell in first_line as 2
first_line[,2] <- "2"
# NDA output ---------
# Create a new file in folder called ppvt_4a.csv, and put first line into this file
# ppvt_4a.csv file will be saved into same folder as current r script
write.table(first_line, file = "ppvt_4a.csv", sep = ",", append = FALSE, quote = FALSE, na = "", col.names = FALSE, row.names = FALSE)
# Append data in NDA_DCCS into dccs.cav file
write.table(NDA_PPVT, file = 'ppvt_4a.csv', sep = ",", append = TRUE, na = "", quote = FALSE, row.names = FALSE)
#Clean Global Environment
rm(first_line)
rm(list = ls())
# install Packages
library(dplyr)
library(data.table)
library(knitr)
library(kableExtra)
library(tidyverse)
# Empty Global Environment
rm(list = ls())
# Import MasterLists
CBCL_Subs <- read.csv("CBCL_subs.csv")
CBCL_Codebook <- read.csv("CBCL_Codebook.csv")
View(CBCL_Codebook)
View(CBCL_Subs)
INT_Tscores <- select(CBCL_Codebook, CBCL_INT_r, CBCL_INT_t)
INT_Tscores <- INT_Tscores[-c(74:201), ]
EXT_Tscores <- select(CBCL_Codebook, CBCL_EXT_r, CBCL_EXT_t)
EXT_Tscores <- EXT_Tscores[-c(50:201), ]
TOT_Tscores <- select(CBCL_Codebook, CBCL_TOT_r, CBCL_TOT_t)
View(INT_Tscores)
# Empty Global Environment
rm(list = ls())
# Import MasterLists
CBCL_Subs <- read.csv("CBCL_subs.csv")
CBCL_Codebook <- read.csv("CBCL_Codebook.csv")
INT_Tscores <- select(CBCL_Codebook, CBCL_INT_r, CBCL_INT_t)
View(INT_Tscores)
INT_Tscores <- INT_Tscores[-c(74:201), ]
View(INT_Tscores)
EXT_Tscores <- select(CBCL_Codebook, CBCL_EXT_r, CBCL_EXT_t)
View(EXT_Tscores)
EXT_Tscores <- EXT_Tscores[-c(50:201), ]
TOT_Tscores <- select(CBCL_Codebook, CBCL_TOT_r, CBCL_TOT_t)
View(CBCL_Subs)
CBCL_Subs <- merge(CBCL_Subs, INT_Tscores, by = "CBCL_INT_r", all.x = TRUE)
View(CBCL_Subs)
CBCL_Subs <- merge(CBCL_Subs, EXT_Tscores, by = "CBCL_EXT_r", all.x = TRUE)
CBCL_Subs <- merge(CBCL_Subs, TOT_Tscores, by = "CBCL_TOT_r", all.x = TRUE)
CBCL_Subs <- select(CBCL_Subs, FamID, TimePoint, CBCL_INT_r, CBCL_INT_t, CBCL_EXT_r, CBCL_EXT_t, CBCL_TOT_r, CBCL_TOT_t)
View(CBCL_Subs)
View(CBCL_Subs)
View(CBCL_Codebook)
View(CBCL_Codebook)
View(CBCL_Codebook)
View(CBCL_Codebook)
View(CBCL_Codebook)
View(CBCL_Subs)
rm(list = ls())
source("Upload Preparation.R")
NDA_CBCL <- read.csv("cbcl1_501_template.csv", skip = 1)
options(digits = 3)
rm(list = ls())
source("~/GitHub/DataUploadAutomation/Upload and Tables/Data/Upload Preparation.R")
