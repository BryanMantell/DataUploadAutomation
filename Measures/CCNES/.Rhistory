knitr::opts_chunk$set(echo = TRUE)
mean(a)
# object assignment
# vertor
a <- c(1,2,3,4)
mean(a)
knitr::opts_chunk$set(echo = TRUE)
getwd()
setwd()
#Matrix  notice Global Environment
myMatrix <- matrix(1:15, nrow = 3, ncol = 5)
nyMatrix
myMatrix
header(myMatrix)
head(myMatrix)
student_score
student <- c("A", "B", "C")
math_score <- c(100, 80, 90)
english_score <- c(98, 93, 93)
student_score <- data.frame(student, math_score, english_score)
student_score
length (student_score)
length (student_score$student)
#structure
str(student_score)
class(student_score)
names(student_score)
#built - in datasets
cars
#l
?lm
#option 2 :help(function)
help(lm)
plot(women$height, women$weight)
help fread
? fread
?? fread
? "fread"
hhelp(fread)
help(fread)
UO_CCNES_T1 <- fread("UO_T1_Qualtrics.csv")
library(dplyr)
library(data.table)
Pedigree <- read.csv("Reference_Pedigree.csv")
# set the working directory
setwd("~/Documents/Min/Coding/DataUploadAutomation/Measures/CCNES")
Pedigree <- read.csv("Reference_Pedigree.csv")
UO_CCNES_T1 <- fread("UO_T1_Qualtrics.csv")
UO_CCNES_T2 <- fread("UO_T2_Qualtrics.csv")
UO_CCNES_T3 <- fread("UO_T3_Qualtrics.csv")
UO_CCNES_T4 <- fread("UO_T4_Qualtrics.csv")
UPMC_CCNES_T1 <- fread("UPMC_T1_CCNES.csv")
UPMC_CCNES_T2 <- fread("UPMC_T2_CCNES.csv")
UPMC_CCNES_T3 <- fread("UPMC_T3_CCNES.csv")
UPMC_CCNES_T4 <- fread("UPMC_T4_CCNES.csv")
#NDA Structure
NDA_CCNES <- fread("pabq01_template.csv")
#remove first two row, because unrevelent
UO_CCNES_T1 = UO_CCNES_T1[-c(1,2),]
UO_CCNES_T2 = UO_CCNES_T2[-c(1,2),]
UO_CCNES_T3 = UO_CCNES_T3[-c(1,2),]
UO_CCNES_T4 = UO_CCNES_T4[-c(1,2),]
UPMC_CCNES_T2 <- select(UPMC_CCNES_T2, c(Q146,Q221))
View(UPMC_CCNES_T1)
UPMC_CCNES_T2 <- select(UPMC_CCNES_T2, c(Q1.1))
View(UO_CCNES_T1)
#NDA Structure
NDA_CCNES <- read.csv("pabq01_template.csv", skip=1)
Pedigree <- read.csv("Reference_Pedigree.csv")
# set the working directory
setwd("~/Documents/Min/Coding/DataUploadAutomation/Measures/CCNES")
Pedigree <- read.csv("Reference_Pedigree.csv")
UO_CCNES_T1 <- fread("UO_T1_Qualtrics.csv")
UO_CCNES_T1 <- read.csv("UO_T1_Qualtrics.csv")
UO_CCNES_T2 <- read.csv("UO_T2_Qualtrics.csv")
UO_CCNES_T3 <- read.csv("UO_T3_Qualtrics.csv")
UO_CCNES_T4 <- read.csv("UO_T4_Qualtrics.csv")
UPMC_CCNES_T1 <- read.csv("UPMC_T1_CCNES.csv")
UPMC_CCNES_T2 <- read.csv("UPMC_T2_CCNES.csv")
UPMC_CCNES_T3 <- read.csv("UPMC_T3_CCNES.csv")
UPMC_CCNES_T4 <- read.csv("UPMC_T4_CCNES.csv")
#NDA Structure
NDA_CCNES <- read.csv("pabq01_template.csv", skip=1)
#remove first two row, because unrevelent
UO_CCNES_T1 = UO_CCNES_T1[-c(1,2),]
UO_CCNES_T2 = UO_CCNES_T2[-c(1,2),]
UO_CCNES_T3 = UO_CCNES_T3[-c(1,2),]
UO_CCNES_T4 = UO_CCNES_T4[-c(1,2),]
UPMC_CCNES_T1 = UPMC_CCNES_T1[-c(1,2),]
UPMC_CCNES_T2 = UPMC_CCNES_T2[-c(1,2),]
UPMC_CCNES_T3 = UPMC_CCNES_T3[-c(1,2),]
UPMC_CCNES_T4 = UPMC_CCNES_T4[-c(1,2),]
# Prep --------------------------------------------------------------------
# Check duplicated columns
UO_CCNES_T1[, !duplicated(colnames(UO_CCNES_T1))]
# Select needed columns
UO_CCNES_T1 <- select(UO_CCNES_T1, c(Q146,Q221, starts_with("14")))
library(dplyr)
library(data.table)
# Select needed columns
UO_CCNES_T1 <- select(UO_CCNES_T1, c(Q146,Q221, starts_with("14")))
rm(list=ls())
library(dplyr)
library(data.table)
# set the working directory
setwd("~/Documents/Min/Coding/DataUploadAutomation/Measures/CCNES")
# Import File -------------------------------------------------------------
Pedigree <- read.csv("Reference_Pedigree.csv")
UO_CCNES_T1 <- read.csv("UO_T1_Qualtrics.csv")
UO_CCNES_T2 <- read.csv("UO_T2_Qualtrics.csv")
UO_CCNES_T3 <- read.csv("UO_T3_Qualtrics.csv")
UO_CCNES_T4 <- read.csv("UO_T4_Qualtrics.csv")
UPMC_CCNES_T1 <- read.csv("UPMC_T1_CCNES.csv")
UPMC_CCNES_T2 <- read.csv("UPMC_T2_CCNES.csv")
UPMC_CCNES_T3 <- read.csv("UPMC_T3_CCNES.csv")
UPMC_CCNES_T4 <- read.csv("UPMC_T4_CCNES.csv")
#NDA Structure
NDA_CCNES <- read.csv("pabq01_template.csv", skip=1,, stringsAsFactors = TRUE)
# Prep --------------------------------------------------------------------
# Edit UO CCNES Time 1 - 4 to have only CCNES quesions and the FamID.
UO_CCNES_T1 <- select(UO_CCNES_T1, c(FamID = Q221, Timepoint = Q146, Q140_1:Q151_6))    #TODO: double check with Bryan 151 or 150
UO_CCNES_T2 <- select(UO_CCNES_T2, c(FamID = Q116, Timepoint = Q117, Q140_1:Q151_6))
UO_CCNES_T3 <- select(UO_CCNES_T3, c(FamID = Q174, Timepoint = Q176, Q140_1:Q151_6))
UO_CCNES_T4 <- select(UO_CCNES_T4, c(FamID = Q203, Timepoint = Q206, Q140_1:Q151_6))
# Edit UPMC CCNES Time 1 - 4 to have only CCNES quesions and the FamID.
UPMC_CCNES_T1 <- select(UPMC_CCNES_T1, c(FamID = Q1.2, Q10.2_1:Q10.13_6))
UPMC_CCNES_T2 <- select(UPMC_CCNES_T2, c(FamID = Q1.2, Q8.2_1:Q8.13_6))  #TODO: double check with Bryan
UPMC_CCNES_T3 <- select(UPMC_CCNES_T3, c(FamID = Q1.2, Q8.2_1:Q8.13_6))  #TODO: double check with Bryan
UPMC_CCNES_T4 <- select(UPMC_CCNES_T4, c(FamID = Q1.2, Q10.2_1:Q10.13_6))
# Create Time Point coloumn in each UPMC Sheet
UPMC_CCNES_T1$Timepoint <- 1
UPMC_CCNES_T2$Timepoint <- 2
UPMC_CCNES_T3$Timepoint <- 3
UPMC_CCNES_T4$Timepoint <- 4
# Select revelent pedigree information
Pedigree <- select(Pedigree, FamID, FamID_Mother, mom_guid, MomGender, interview_date = Time1Date, interview_age = MomAge_T1)
# Create list of new variable names
new_CCNES_names <- sprintf("srm_ccnes_%02d",1:72)
# Adding r at end of variable which needed to be reversed
new_CCNES_names[c(7,39,45,55)]<-paste(new_CCNES_names[c(7,39,45,55)],"r", sep = "")
# Create list of old variable names so we can replace them with the new ones
# Create an empty list
odd_UO_CCNES_names <-c()
# for each item in UO paste number 1 to 6
# sprintf used to formate str
for (i in sprintf("Q%03d",140:151)){
name <- paste(i, 1:6, sep = "_")
odd_UO_CCNES_names <- c(odd_UO_CCNES_names, name)
}
# Create list of UPMC bariable names
odd_UPMC_CCNES_names <-c()
for (i in sprintf("Q10.%d",2:13)) {
Name <- paste (i, 1:6, sep = "_")
odd_UPMC_CCNES_names <- c(odd_UPMC_CCNES_names, Name)
}
# Create second list of UPMC variable names
odd_UPMC_CCNES_names2 <-c()
for (i in sprintf("Q8.%d",2:13)) {
Name <- paste (i, 1:6, sep = "_")
odd_UPMC_CCNES_names2 <- c(odd_UPMC_CCNES_names2, Name)
}
# Replace UO column names
setnames(UO_CCNES_T1, odd_UO_CCNES_names, new_CCNES_names)
setnames(UO_CCNES_T2, odd_UO_CCNES_names, new_CCNES_names)
setnames(UO_CCNES_T3, odd_UO_CCNES_names, new_CCNES_names)
setnames(UO_CCNES_T4, odd_UO_CCNES_names, new_CCNES_names)
# Replace UPMC column names
setnames(UPMC_CCNES_T1, odd_UPMC_CCNES_names, new_CCNES_names)
setnames(UPMC_CCNES_T2, odd_UPMC_CCNES_names2, new_CCNES_names)
setnames(UPMC_CCNES_T3, odd_UPMC_CCNES_names2, new_CCNES_names)
setnames(UPMC_CCNES_T4, odd_UPMC_CCNES_names, new_CCNES_names)
# # Bind UO and UPMC AAQ Data By Time Point
# CCNES_T1 <- rbind(UO_CCNES_T1, UPMC_CCNES_T1)
# CCNES_T2 <- rbind(UO_CCNES_T2, UPMC_CCNES_T2)
# CCNES_T3 <- rbind(UO_CCNES_T3, UPMC_CCNES_T3)
# CCNES_T4 <- rbind(UO_CCNES_T4, UPMC_CCNES_T4)
#
# # Clean Global Enviorment
# rm(UO_CCNES_T1, UO_CCNES_T2, UO_CCNES_T3, UO_CCNES_T4, UPMC_CCNES_T1, UPMC_CCNES_T2, UPMC_CCNES_T3, UPMC_CCNES_T4)
# Bind UO and UPMC data
CCNES_PREP <- rbind(UO_CCNES_T1,UO_CCNES_T2,UO_CCNES_T3,UO_CCNES_T4)
# Merge Predigree and CCNES_PREP
CCNES_PREP <- merge(Pedigree, CCNES_PREP, by = "FamID")
# Clean Flobal Enviorment
rm(UO_CCNES_T1, UO_CCNES_T2, UO_CCNES_T3, UO_CCNES_T4, UPMC_CCNES_T1, UPMC_CCNES_T2, UPMC_CCNES_T3, UPMC_CCNES_T4)
# Recode the strings of text to numbers
#TODO: Prefer not to answer now as NA?
CCNES_PREP <- CCNES_PREP %>%
mutate_at(new_CCNES_names,
funs(recode(., "1 - Very Unlikely" = 1,
'2' = 2,
'3' = 3,
'4 - Medium Liklihood' = 4,
'5' = 5,
'6' = 6,
'7 - Very Likely'= 7,.default = NaN)))
# Reversed Scored
CCNES_PREP <- CCNES_PREP %>%
mutate_at(c("srm_ccnes_07r", "srm_ccnes_39r", "srm_ccnes_45r", "srm_ccnes_55r"),
funs(recode(., "1" = 7,
'2' = 6,
'3' = 5,
'4' = 4,
'5' = 3,
'6' = 2,
'7' = 1,.default = NaN)))
CCNES_PREP <- CCNES_PREP %>%
mutate_at(new_CCNES_names,
for (i in new_CCNES_names){
recode(., recode(., NaN = rowsum(i)))
})
View(CCNES_PREP)
names(CCNES_PREP)
AAQ_Prep[,8:79] <- sapply(AAQ_Prep[,8:79],as.numeric)
CCNES_PREP[,8:79] <- sapply(CCNES_PREP[,8:79],as.numeric)
CCNES_PREP[,8:79]<-CCNES_PREP[CCNES_PREP == is.NaN, ]
rowsum(CCNES_PREP)
rowSums(CCNES_PREP)
rowSums(CCNES_PREP[,8:79])
View(CCNES_PREP)
is.nan(CCNES_PREP)
is.nan(CCNES_PREP[16,])
CCNES_PREP<-CCNES_PREP[is.nan(CCNES_PREP), ]<- rowsum(CCNES_PREP[,contains("ccnes"))
