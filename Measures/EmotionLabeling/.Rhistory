library(kableExtra)
Emotion_Labeling_REDCAP <- read.csv("Redcap_Data.csv")
Pedigree <- read.csv("Reference_Pedigree.csv")
Emotion_Labeling_NDA <- read.csv("elt01_template.csv", skip=1)
#rename elt_exp names
eltpart1_exp <- "oc_elt_exp"
num_items <- seq(1:8)
new_eltpart1_names <- paste(eltpart1_exp, num_items, sep = "_")
#rename elt_rec names
eltpart2_rec <- "oc_elt_rec"
num_items <- seq (1:4)
new_eltpart2_names <- paste(eltpart2_rec, num_items, sep = "_")
#replace old eltpart1 names with new names
eltpart1_exp <- "eltpart1_exp"
num_items <- seq (1:8)
old_eltpart1_names <- paste(eltpart1_exp, num_items, sep = "")
setnames(Emotion_Labeling_REDCAP, old_eltpart1_names, new_eltpart1_names)
#replace old eltpart2 names with new names
eltpart2_rec <- "eltpart2_rec"
num_items <- seq (1:4)
old_eltpart2_names <- paste(eltpart2_rec, num_items, sep = "")
setnames(Emotion_Labeling_REDCAP, old_eltpart2_names, new_eltpart2_names)
#Assign timepoint from redcap_event_name
Emotion_Labeling_REDCAP$timepoint = sapply(strsplit(as.character(Emotion_Labeling_REDCAP$redcap_event_name), split = '_', fixed = T), function(x) (x[2]))
Emotion_Labeling_REDCAP <- select(Emotion_Labeling_REDCAP, c(Fam_ID = fam_id,  timepoint, starts_with("oc_elt_")))
Emotion_Labeling_REDCAP <- select(Emotion_Labeling_REDCAP, -c(oc_elt_notes))
#Select relevant pedigree information
Pedigree_T1 <- data.frame(select(Pedigree, Fam_ID =  FamID, child_guid, child_famID = FamID_Child, interview_date = Time1Date, interview_age = MomAge_T1, child_sex = ChildGender, GroupAssignment), timepoint = 1 )
Pedigree_T2 <- data.frame(select(Pedigree, Fam_ID =  FamID, child_guid, child_famID = FamID_Child, interview_date = Time2Date, interview_age = MomAge_T2, child_sex = ChildGender, GroupAssignment), timepoint = 2 )
Pedigree_T3 <- data.frame(select(Pedigree, Fam_ID =  FamID, child_guid, child_famID = FamID_Child, interview_date = Time3Date, interview_age = MomAge_T3, child_sex = ChildGender, GroupAssignment), timepoint = 3 )
Pedigree_T4 <- data.frame(select(Pedigree, Fam_ID =  FamID, child_guid, child_famID = FamID_Child, interview_date = Time4Date, interview_age = MomAge_T4, child_sex = ChildGender, GroupAssignment), timepoint = 4 )
#Merge pedigree info
Pedigree_Prep <- rbind(Pedigree_T1, Pedigree_T2, Pedigree_T3, Pedigree_T4)
#merge Pedigree info and Redcap data
EL_PREP <- merge(Pedigree_Prep, Emotion_Labeling_REDCAP,by = c("timepoint","Fam_ID"), all = TRUE)
#clean environment
# rm(Pedigree, Pedigree_Prep, Pedigree_T1, Pedigree_T2, Pedigree_T3, Pedigree_T4, Emotion_Labeling_REDCAP)
exp <- colnames(select(EL_PREP, c("oc_elt_exp_2", "oc_elt_exp_4", "oc_elt_exp_6", "oc_elt_exp_8")))
rec <- colnames(select(EL_PREP, c("oc_elt_rec_1", "oc_elt_rec_2", "oc_elt_rec_3", "oc_elt_rec_4")))
EL_PREP$oc_elt_exp_total <- rowMeans(EL_PREP[,exp], na.rm = TRUE)
EL_PREP$oc_elt_rec_total <- rowMeans(EL_PREP[,rec], na.rm = TRUE)
EL_PREP$NACheck <- rowSums(is.na(select(EL_PREP, starts_with("oc_elt_"))))/ncol(dplyr::select(EL_PREP, starts_with("oc_elt_")))
#EL_PREP$EL_total_cor <- ifelse(EL_PREP$NACheck < 0.67, rowMeans(EL_PREP[,oc_elt_total], na.rm = TRUE), "NA")
#Separate Data into % response
EL_DROP <- EL_PREP[EL_PREP$NACheck > 0.67, ]
EL_PREP67 <- EL_PREP[EL_PREP$NACheck <= 0.67, ]
EL_PREP100 <- EL_PREP[EL_PREP$NACheck <= 0, ]
Emotion_Labeling_NDA <- select(EL_PREP67, c(subjectkey = child_guid, src_subject_id = child_famID, interview_date, interview_age, sex = child_sex, visit = timepoint, starts_with("oc_elt_")))
# Replace columns name
# Recreate first line in orignial NDA file
Emotion_Labeling_NDA <- bind_rows(Emotion_Labeling_NDA, EL_PREP67)
first_line <- matrix("", nrow = 1, ncol = ncol(Emotion_Labeling_NDA))
first_line[,1] <- "el"
# assign the second cell in first_line as "el"
first_line[,2] <- "1"
# NDA output ---------
# Create a new file in folder called el.csv, and put first line into this file
# el.csv file will be saved into same folder as current r script
write.table(first_line, file = "el01.csv", sep = ",", append = FALSE, quote = FALSE, na = "", col.names = FALSE, row.names = FALSE)
# Append data in Emotion_Ladeling_NDA into el.csv file
write.table(Emotion_Labeling_NDA, file = 'el01.csv', sep = ",", append = TRUE, na = "", quote = FALSE, row.names = FALSE)
Progress67 <- select(EL_PREP67, c(Fam_ID, GroupAssignment, timepoint, starts_with("oc_elt_")))
View(EL_PREP67)
Progress67$Row_Mean <- rowMeans(select(EL_PREP67,c(starts_with("oc_elt"))), na.rm = T)
EL_PREP67[, c(10,12,14,16:23)] <- sapply(EL_PREP67[, c(10,12,14,16:23)] ,as.numeric)
Progress67$Row_Mean <- rowMeans(select(EL_PREP67,c(starts_with("oc_elt"))), na.rm = T)
Progress67$Row_Mean <- rowMeans(select(EL_PREP67, c(10,12,14,16:23)))
View(Progress67)
#Clear Environment Setup
rm(list = ls())
#Enable Packages
library(dplyr)
library(tidyverse)
library(data.table)
library(kableExtra)
Emotion_Labeling_REDCAP <- read.csv("Redcap_Data.csv")
Pedigree <- read.csv("Reference_Pedigree.csv")
Emotion_Labeling_NDA <- read.csv("elt01_template.csv", skip=1)
#rename elt_exp names
eltpart1_exp <- "oc_elt_exp"
num_items <- seq(1:8)
new_eltpart1_names <- paste(eltpart1_exp, num_items, sep = "_")
#rename elt_rec names
eltpart2_rec <- "oc_elt_rec"
num_items <- seq (1:4)
new_eltpart2_names <- paste(eltpart2_rec, num_items, sep = "_")
#replace old eltpart1 names with new names
eltpart1_exp <- "eltpart1_exp"
num_items <- seq (1:8)
old_eltpart1_names <- paste(eltpart1_exp, num_items, sep = "")
setnames(Emotion_Labeling_REDCAP, old_eltpart1_names, new_eltpart1_names)
#replace old eltpart2 names with new names
eltpart2_rec <- "eltpart2_rec"
num_items <- seq (1:4)
old_eltpart2_names <- paste(eltpart2_rec, num_items, sep = "")
setnames(Emotion_Labeling_REDCAP, old_eltpart2_names, new_eltpart2_names)
#Assign timepoint from redcap_event_name
Emotion_Labeling_REDCAP$timepoint = sapply(strsplit(as.character(Emotion_Labeling_REDCAP$redcap_event_name), split = '_', fixed = T), function(x) (x[2]))
Emotion_Labeling_REDCAP <- select(Emotion_Labeling_REDCAP, c(Fam_ID = fam_id,  timepoint, starts_with("oc_elt_")))
Emotion_Labeling_REDCAP <- select(Emotion_Labeling_REDCAP, -c(oc_elt_notes))
#Select relevant pedigree information
Pedigree_T1 <- data.frame(select(Pedigree, Fam_ID =  FamID, child_guid, child_famID = FamID_Child, interview_date = Time1Date, interview_age = MomAge_T1, child_sex = ChildGender, GroupAssignment), timepoint = 1 )
Pedigree_T2 <- data.frame(select(Pedigree, Fam_ID =  FamID, child_guid, child_famID = FamID_Child, interview_date = Time2Date, interview_age = MomAge_T2, child_sex = ChildGender, GroupAssignment), timepoint = 2 )
Pedigree_T3 <- data.frame(select(Pedigree, Fam_ID =  FamID, child_guid, child_famID = FamID_Child, interview_date = Time3Date, interview_age = MomAge_T3, child_sex = ChildGender, GroupAssignment), timepoint = 3 )
Pedigree_T4 <- data.frame(select(Pedigree, Fam_ID =  FamID, child_guid, child_famID = FamID_Child, interview_date = Time4Date, interview_age = MomAge_T4, child_sex = ChildGender, GroupAssignment), timepoint = 4 )
#Merge pedigree info
Pedigree_Prep <- rbind(Pedigree_T1, Pedigree_T2, Pedigree_T3, Pedigree_T4)
#merge Pedigree info and Redcap data
EL_PREP <- merge(Pedigree_Prep, Emotion_Labeling_REDCAP,by = c("timepoint","Fam_ID"), all = TRUE)
#clean environment
# rm(Pedigree, Pedigree_Prep, Pedigree_T1, Pedigree_T2, Pedigree_T3, Pedigree_T4, Emotion_Labeling_REDCAP)
exp <- colnames(select(EL_PREP, c("oc_elt_exp_2", "oc_elt_exp_4", "oc_elt_exp_6", "oc_elt_exp_8")))
rec <- colnames(select(EL_PREP, c("oc_elt_rec_1", "oc_elt_rec_2", "oc_elt_rec_3", "oc_elt_rec_4")))
EL_PREP$oc_elt_exp_total <- rowMeans(EL_PREP[,exp], na.rm = TRUE)
EL_PREP$oc_elt_rec_total <- rowMeans(EL_PREP[,rec], na.rm = TRUE)
EL_PREP$NACheck <- rowSums(is.na(select(EL_PREP, starts_with("oc_elt_"))))/ncol(dplyr::select(EL_PREP, starts_with("oc_elt_")))
#EL_PREP$EL_total_cor <- ifelse(EL_PREP$NACheck < 0.67, rowMeans(EL_PREP[,oc_elt_total], na.rm = TRUE), "NA")
#Separate Data into % response
EL_DROP <- EL_PREP[EL_PREP$NACheck > 0.67, ]
EL_PREP67 <- EL_PREP[EL_PREP$NACheck <= 0.67, ]
EL_PREP100 <- EL_PREP[EL_PREP$NACheck <= 0, ]
Emotion_Labeling_NDA <- select(EL_PREP67, c(subjectkey = child_guid, src_subject_id = child_famID, interview_date, interview_age, sex = child_sex, visit = timepoint, starts_with("oc_elt_")))
# Replace columns name
# Recreate first line in orignial NDA file
Emotion_Labeling_NDA <- bind_rows(Emotion_Labeling_NDA, EL_PREP67)
first_line <- matrix("", nrow = 1, ncol = ncol(Emotion_Labeling_NDA))
first_line[,1] <- "el"
# assign the second cell in first_line as "el"
first_line[,2] <- "1"
# NDA output ---------
# Create a new file in folder called el.csv, and put first line into this file
# el.csv file will be saved into same folder as current r script
write.table(first_line, file = "el01.csv", sep = ",", append = FALSE, quote = FALSE, na = "", col.names = FALSE, row.names = FALSE)
# Append data in Emotion_Ladeling_NDA into el.csv file
write.table(Emotion_Labeling_NDA, file = 'el01.csv', sep = ",", append = TRUE, na = "", quote = FALSE, row.names = FALSE)
Progress67 <- select(EL_PREP67, c(Fam_ID, GroupAssignment, timepoint, starts_with("oc_elt_")))
EL_PREP67[, c(10,12,14,16:23)] <- sapply(EL_PREP67[, c(10,12,14,16:23)] ,as.numeric)
EL_PREP67[, c(9:23)] <- sapply(EL_PREP67[, c(9:23)] ,as.numeric)
View(EL_PREP67)
Progress67$Row_Mean <- rowMeans(select(EL_PREP67,c(starts_with("oc_elt"))), na.rm = T)
View(Progress67)
EL_PREP67[, c(10,12,14,16:23)] <- sapply(EL_PREP67[, c(10,12,14,16:23)] ,as.numeric)
Progress67$Row_Mean <- rowMeans(select(EL_PREP67, c(10,12,14,16:23)))
View(Progress67)
ID <- c(as.character(Progress67$Fam_ID))
Progress67$site <- ifelse(startsWith(ID, "9"),"UO","UPMC")
Progress_Mean <- Progress67 %>%
group_by(GroupAssignment,timepoint,site) %>%
summarise(GroupMean = mean(Row_Mean,na.rm = T),count = n())
UO <- Progress_Mean[Progress_Mean$site == "UO",]
UPMC <- Progress_Mean[Progress_Mean$site == "UPMC",]
Both_site_Mean <- Progress67 %>%
group_by(GroupAssignment, timepoint) %>%
summarise(BothSite_EmotionalLabeling_Mean = mean(Row_Mean,na.rm = T),n = n())
# Change GroupMean Column names according to site
colnames(UO)[colnames(UO) == "GroupMean"] = "UO_EmotionalLabeling"
colnames(UPMC)[colnames(UPMC) == "GroupMean"] = "UPMC_EmotionalLabeling"
# Combine UO,UPMC and both_site data
Mean_Table67 <- data.frame(UO[,c("UO_EmotionalLabeling")],UPMC[,"UPMC_EmotionalLabeling"],Both_site_Mean[,c("BothSite_EmotionalLabeling_Mean","n","GroupAssignment")])
#Clear Environment Setup
rm(list = ls())
#Enable Packages
library(dplyr)
library(tidyverse)
library(data.table)
library(kableExtra)
Emotion_Labeling_REDCAP <- read.csv("Redcap_Data.csv")
Pedigree <- read.csv("Reference_Pedigree.csv")
Emotion_Labeling_NDA <- read.csv("elt01_template.csv", skip=1)
#rename elt_exp names
eltpart1_exp <- "oc_elt_exp"
num_items <- seq(1:8)
new_eltpart1_names <- paste(eltpart1_exp, num_items, sep = "_")
#rename elt_rec names
eltpart2_rec <- "oc_elt_rec"
num_items <- seq (1:4)
new_eltpart2_names <- paste(eltpart2_rec, num_items, sep = "_")
#replace old eltpart1 names with new names
eltpart1_exp <- "eltpart1_exp"
num_items <- seq (1:8)
old_eltpart1_names <- paste(eltpart1_exp, num_items, sep = "")
setnames(Emotion_Labeling_REDCAP, old_eltpart1_names, new_eltpart1_names)
#replace old eltpart2 names with new names
eltpart2_rec <- "eltpart2_rec"
num_items <- seq (1:4)
old_eltpart2_names <- paste(eltpart2_rec, num_items, sep = "")
setnames(Emotion_Labeling_REDCAP, old_eltpart2_names, new_eltpart2_names)
#Assign timepoint from redcap_event_name
Emotion_Labeling_REDCAP$timepoint = sapply(strsplit(as.character(Emotion_Labeling_REDCAP$redcap_event_name), split = '_', fixed = T), function(x) (x[2]))
Emotion_Labeling_REDCAP <- select(Emotion_Labeling_REDCAP, c(Fam_ID = fam_id,  timepoint, starts_with("oc_elt_")))
Emotion_Labeling_REDCAP <- select(Emotion_Labeling_REDCAP, -c(oc_elt_notes))
#Select relevant pedigree information
Pedigree_T1 <- data.frame(select(Pedigree, Fam_ID =  FamID, child_guid, child_famID = FamID_Child, interview_date = Time1Date, interview_age = MomAge_T1, child_sex = ChildGender, GroupAssignment), timepoint = 1 )
Pedigree_T2 <- data.frame(select(Pedigree, Fam_ID =  FamID, child_guid, child_famID = FamID_Child, interview_date = Time2Date, interview_age = MomAge_T2, child_sex = ChildGender, GroupAssignment), timepoint = 2 )
Pedigree_T3 <- data.frame(select(Pedigree, Fam_ID =  FamID, child_guid, child_famID = FamID_Child, interview_date = Time3Date, interview_age = MomAge_T3, child_sex = ChildGender, GroupAssignment), timepoint = 3 )
Pedigree_T4 <- data.frame(select(Pedigree, Fam_ID =  FamID, child_guid, child_famID = FamID_Child, interview_date = Time4Date, interview_age = MomAge_T4, child_sex = ChildGender, GroupAssignment), timepoint = 4 )
#Merge pedigree info
Pedigree_Prep <- rbind(Pedigree_T1, Pedigree_T2, Pedigree_T3, Pedigree_T4)
#merge Pedigree info and Redcap data
EL_PREP <- merge(Pedigree_Prep, Emotion_Labeling_REDCAP,by = c("timepoint","Fam_ID"), all = TRUE)
#clean environment
# rm(Pedigree, Pedigree_Prep, Pedigree_T1, Pedigree_T2, Pedigree_T3, Pedigree_T4, Emotion_Labeling_REDCAP)
exp <- colnames(select(EL_PREP, c("oc_elt_exp_2", "oc_elt_exp_4", "oc_elt_exp_6", "oc_elt_exp_8")))
rec <- colnames(select(EL_PREP, c("oc_elt_rec_1", "oc_elt_rec_2", "oc_elt_rec_3", "oc_elt_rec_4")))
EL_PREP$oc_elt_exp_total <- rowMeans(EL_PREP[,exp], na.rm = TRUE)
EL_PREP$oc_elt_rec_total <- rowMeans(EL_PREP[,rec], na.rm = TRUE)
EL_PREP$NACheck <- rowSums(is.na(select(EL_PREP, starts_with("oc_elt_"))))/ncol(dplyr::select(EL_PREP, starts_with("oc_elt_")))
#EL_PREP$EL_total_cor <- ifelse(EL_PREP$NACheck < 0.67, rowMeans(EL_PREP[,oc_elt_total], na.rm = TRUE), "NA")
#Separate Data into % response
EL_DROP <- EL_PREP[EL_PREP$NACheck > 0.67, ]
EL_PREP67 <- EL_PREP[EL_PREP$NACheck <= 0.67, ]
EL_PREP100 <- EL_PREP[EL_PREP$NACheck <= 0, ]
Emotion_Labeling_NDA <- select(EL_PREP67, c(subjectkey = child_guid, src_subject_id = child_famID, interview_date, interview_age, sex = child_sex, visit = timepoint, starts_with("oc_elt_")))
# Replace columns name
# Recreate first line in orignial NDA file
Emotion_Labeling_NDA <- bind_rows(Emotion_Labeling_NDA, EL_PREP67)
first_line <- matrix("", nrow = 1, ncol = ncol(Emotion_Labeling_NDA))
first_line[,1] <- "el"
# assign the second cell in first_line as "el"
first_line[,2] <- "1"
# NDA output ---------
# Create a new file in folder called el.csv, and put first line into this file
# el.csv file will be saved into same folder as current r script
write.table(first_line, file = "el01.csv", sep = ",", append = FALSE, quote = FALSE, na = "", col.names = FALSE, row.names = FALSE)
# Append data in Emotion_Ladeling_NDA into el.csv file
write.table(Emotion_Labeling_NDA, file = 'el01.csv', sep = ",", append = TRUE, na = "", quote = FALSE, row.names = FALSE)
Progress67 <- select(EL_PREP67, c(Fam_ID, GroupAssignment, timepoint, starts_with("oc_elt_")))
EL_PREP67[, c(10,12,14,16:23)] <- sapply(EL_PREP67[, c(10,12,14,16:23)] ,as.numeric)
# Calculate row mean for each individual
#Progress67$Row_Mean <- rowMeans(select(EL_PREP67,c(starts_with("oc_elt"))), na.rm = T)
Progress67$Row_Mean <- rowMeans(select(EL_PREP67, c(10,12,14,16:23)))
# Change FamId as character and assign to ID variable
ID <- c(as.character(Progress67$Fam_ID))
# Add Site column to Progress, if ID start with 9 then site is UO, else is UPMC
Progress67$site <- ifelse(startsWith(ID, "9"),"UO","UPMC")
# Group by GroupAssissignment and Timepoint, and calculate the Group Mean
Progress_Mean <- Progress67 %>%
group_by(GroupAssignment,timepoint,site) %>%
summarise(GroupMean = mean(Row_Mean,na.rm = T),count = n())
# Select only UO Mean
UO <- Progress_Mean[Progress_Mean$site == "UO",]
# Select only UPMC Mean
UPMC <- Progress_Mean[Progress_Mean$site == "UPMC",]
# Calculate Both site Mean
Both_site_Mean <- Progress67 %>%
group_by(GroupAssignment, timepoint) %>%
summarise(BothSite_EmotionalLabeling_Mean = mean(Row_Mean,na.rm = T),n = n())
# Change GroupMean Column names according to site
colnames(UO)[colnames(UO) == "GroupMean"] = "UO_EmotionalLabeling"
colnames(UPMC)[colnames(UPMC) == "GroupMean"] = "UPMC_EmotionalLabeling"
# Combine UO,UPMC and both_site data
Mean_Table67 <- data.frame(UO[,c("UO_EmotionalLabeling")],UPMC[,"UPMC_EmotionalLabeling"],Both_site_Mean[,c("BothSite_EmotionalLabeling_Mean","n","GroupAssignment")])
View(UO)
View(UPMC)
#Clear Environment Setup
rm(list = ls())
#Enable Packages
library(dplyr)
library(tidyverse)
library(data.table)
library(kableExtra)
Emotion_Labeling_REDCAP <- read.csv("Redcap_Data.csv")
Pedigree <- read.csv("Reference_Pedigree.csv")
Emotion_Labeling_NDA <- read.csv("elt01_template.csv", skip=1)
#rename elt_exp names
eltpart1_exp <- "oc_elt_exp"
num_items <- seq(1:8)
new_eltpart1_names <- paste(eltpart1_exp, num_items, sep = "_")
#rename elt_rec names
eltpart2_rec <- "oc_elt_rec"
num_items <- seq (1:4)
new_eltpart2_names <- paste(eltpart2_rec, num_items, sep = "_")
#replace old eltpart1 names with new names
eltpart1_exp <- "eltpart1_exp"
num_items <- seq (1:8)
old_eltpart1_names <- paste(eltpart1_exp, num_items, sep = "")
setnames(Emotion_Labeling_REDCAP, old_eltpart1_names, new_eltpart1_names)
#replace old eltpart2 names with new names
eltpart2_rec <- "eltpart2_rec"
num_items <- seq (1:4)
old_eltpart2_names <- paste(eltpart2_rec, num_items, sep = "")
setnames(Emotion_Labeling_REDCAP, old_eltpart2_names, new_eltpart2_names)
#Assign timepoint from redcap_event_name
Emotion_Labeling_REDCAP$timepoint = sapply(strsplit(as.character(Emotion_Labeling_REDCAP$redcap_event_name), split = '_', fixed = T), function(x) (x[2]))
Emotion_Labeling_REDCAP <- select(Emotion_Labeling_REDCAP, c(Fam_ID = fam_id,  timepoint, starts_with("oc_elt_")))
Emotion_Labeling_REDCAP <- select(Emotion_Labeling_REDCAP, -c(oc_elt_notes))
#Select relevant pedigree information
Pedigree_T1 <- data.frame(select(Pedigree, Fam_ID =  FamID, child_guid, child_famID = FamID_Child, interview_date = Time1Date, interview_age = MomAge_T1, child_sex = ChildGender, GroupAssignment), timepoint = 1 )
Pedigree_T2 <- data.frame(select(Pedigree, Fam_ID =  FamID, child_guid, child_famID = FamID_Child, interview_date = Time2Date, interview_age = MomAge_T2, child_sex = ChildGender, GroupAssignment), timepoint = 2 )
Pedigree_T3 <- data.frame(select(Pedigree, Fam_ID =  FamID, child_guid, child_famID = FamID_Child, interview_date = Time3Date, interview_age = MomAge_T3, child_sex = ChildGender, GroupAssignment), timepoint = 3 )
Pedigree_T4 <- data.frame(select(Pedigree, Fam_ID =  FamID, child_guid, child_famID = FamID_Child, interview_date = Time4Date, interview_age = MomAge_T4, child_sex = ChildGender, GroupAssignment), timepoint = 4 )
#Merge pedigree info
Pedigree_Prep <- rbind(Pedigree_T1, Pedigree_T2, Pedigree_T3, Pedigree_T4)
#merge Pedigree info and Redcap data
EL_PREP <- merge(Pedigree_Prep, Emotion_Labeling_REDCAP,by = c("timepoint","Fam_ID"), all = TRUE)
#clean environment
# rm(Pedigree, Pedigree_Prep, Pedigree_T1, Pedigree_T2, Pedigree_T3, Pedigree_T4, Emotion_Labeling_REDCAP)
exp <- colnames(select(EL_PREP, c("oc_elt_exp_2", "oc_elt_exp_4", "oc_elt_exp_6", "oc_elt_exp_8")))
rec <- colnames(select(EL_PREP, c("oc_elt_rec_1", "oc_elt_rec_2", "oc_elt_rec_3", "oc_elt_rec_4")))
EL_PREP$oc_elt_exp_total <- rowMeans(EL_PREP[,exp], na.rm = TRUE)
EL_PREP$oc_elt_rec_total <- rowMeans(EL_PREP[,rec], na.rm = TRUE)
EL_PREP$NACheck <- rowSums(is.na(select(EL_PREP, starts_with("oc_elt_"))))/ncol(dplyr::select(EL_PREP, starts_with("oc_elt_")))
#EL_PREP$EL_total_cor <- ifelse(EL_PREP$NACheck < 0.67, rowMeans(EL_PREP[,oc_elt_total], na.rm = TRUE), "NA")
#Separate Data into % response
EL_DROP <- EL_PREP[EL_PREP$NACheck > 0.67, ]
EL_PREP67 <- EL_PREP[EL_PREP$NACheck <= 0.67, ]
EL_PREP100 <- EL_PREP[EL_PREP$NACheck <= 0, ]
Emotion_Labeling_NDA <- select(EL_PREP67, c(subjectkey = child_guid, src_subject_id = child_famID, interview_date, interview_age, sex = child_sex, visit = timepoint, starts_with("oc_elt_")))
# Replace columns name
# Recreate first line in orignial NDA file
Emotion_Labeling_NDA <- bind_rows(Emotion_Labeling_NDA, EL_PREP67)
first_line <- matrix("", nrow = 1, ncol = ncol(Emotion_Labeling_NDA))
first_line[,1] <- "el"
# assign the second cell in first_line as "el"
first_line[,2] <- "1"
# NDA output ---------
# Create a new file in folder called el.csv, and put first line into this file
# el.csv file will be saved into same folder as current r script
write.table(first_line, file = "el01.csv", sep = ",", append = FALSE, quote = FALSE, na = "", col.names = FALSE, row.names = FALSE)
# Append data in Emotion_Ladeling_NDA into el.csv file
write.table(Emotion_Labeling_NDA, file = 'el01.csv', sep = ",", append = TRUE, na = "", quote = FALSE, row.names = FALSE)
Progress67 <- select(EL_PREP67, c(Fam_ID, GroupAssignment, timepoint, starts_with("oc_elt_")))
EL_PREP67[, c(10,12,14,16:23)] <- sapply(EL_PREP67[, c(10,12,14,16:23)] ,as.numeric)
# Calculate row mean for each individual
#Progress67$Row_Mean <- rowMeans(select(EL_PREP67,c(starts_with("oc_elt"))), na.rm = T)
Progress67$Row_Mean <- rowMeans(select(EL_PREP67, c(10,12,14,16:23)))
# Change FamId as character and assign to ID variable
ID <- c(as.character(Progress67$Fam_ID))
Progress67$site <- ifelse(startsWith(ID, "9"),"UO","UPMC")
Progress_Mean <- Progress67 %>%
group_by(GroupAssignment,timepoint,site) %>%
summarise(GroupMean = mean(Row_Mean,na.rm = T),count = n())
UO <- Progress_Mean[Progress_Mean$site == "UO",]
UPMC <- Progress_Mean[Progress_Mean$site == "UPMC",]
Both_site_Mean <- Progress67 %>%
group_by(GroupAssignment, timepoint) %>%
summarise(BothSite_EmotionalLabeling_Mean = mean(Row_Mean,na.rm = T),n = n())
# Change GroupMean Column names according to site
colnames(UO)[colnames(UO) == "GroupMean"] = "UO_EmotionalLabeling"
colnames(UPMC)[colnames(UPMC) == "GroupMean"] = "UPMC_EmotionalLabeling"
View(Both_site_Mean)
View(Both_site_Mean)
View(UO)
View(UPMC)
View(EL_PREP100)
Progress100 <- select(EL_PREP100, c(Fam_ID, GroupAssignment, timepoint, starts_with("oc_elt_")))
EL_PREP100[, c(10,12,14,16:23)] <- sapply(EL_PREP100[, c(10,12,14,16:23)],as.numeric)
Progress100$Row_Mean <- rowMeans(select(EL_PREP100,c[, c(10,12,14,16:23)]))
Progress100$Row_Mean <- rowMeans(select(EL_PREP100, c(10,12,14,16:23)))
ID <- c(as.character(Progress100$Fam_ID))
# Add Site column to Progress, if ID start with 9 then site is UO, else is UPMC
Progress100$site <- ifelse(startsWith(ID, "9"),"UO","UPMC")
Progress_Mean <- Progress100 %>%
group_by(GroupAssignment,timepoint,site) %>%
summarise(GroupMean = mean(Row_Mean,na.rm = T),count = n())
UO <- Progress_Mean[Progress_Mean$site == "UO",]
# Select only UPMC Mean
UPMC <- Progress_Mean[Progress_Mean$site == "UPMC",]
# Calculate Both site Mean
Both_site_Mean <- Progress100 %>%
group_by(GroupAssignment, timepoint) %>%
summarise(BothSite_EmotionalLabeling_Mean = mean(Row_Mean,na.rm = T),n = n())
colnames(UO)[colnames(UO) == "GroupMean"] = "UO_EmotionalLabeling"
colnames(UPMC)[colnames(UPMC) == "GroupMean"] = "UPMC_EmotionalLabeling"
Mean_Table100 <- data.frame(UO[,c("UO_EmotionalLabeling")],UPMC[,"UPMC_EmotionalLabeling"],Both_site_Mean[,c("BothSite_EmotionalLabeling_Mean","n","GroupAssignment")])
N_ori <- Progress %>%
group_by(timepoint, site, GroupAssignment) %>%
summarise(n_ori = n())
View(Progress_Mean)
View(EL_PREP)
library(dplyr)
library(tidyverse)
library(data.table)
library(kableExtra)
Emotion_Labeling_REDCAP <- read.csv("Redcap_Data.csv")
Pedigree <- read.csv("Reference_Pedigree.csv")
Emotion_Labeling_NDA <- read.csv("elt01_template.csv", skip=1)
#rename elt_exp names
eltpart1_exp <- "oc_elt_exp"
num_items <- seq(1:8)
new_eltpart1_names <- paste(eltpart1_exp, num_items, sep = "_")
#rename elt_rec names
eltpart2_rec <- "oc_elt_rec"
num_items <- seq (1:4)
new_eltpart2_names <- paste(eltpart2_rec, num_items, sep = "_")
#replace old eltpart1 names with new names
eltpart1_exp <- "eltpart1_exp"
num_items <- seq (1:8)
old_eltpart1_names <- paste(eltpart1_exp, num_items, sep = "")
setnames(Emotion_Labeling_REDCAP, old_eltpart1_names, new_eltpart1_names)
#replace old eltpart2 names with new names
eltpart2_rec <- "eltpart2_rec"
num_items <- seq (1:4)
old_eltpart2_names <- paste(eltpart2_rec, num_items, sep = "")
setnames(Emotion_Labeling_REDCAP, old_eltpart2_names, new_eltpart2_names)
#Assign timepoint from redcap_event_name
Emotion_Labeling_REDCAP$timepoint = sapply(strsplit(as.character(Emotion_Labeling_REDCAP$redcap_event_name), split = '_', fixed = T), function(x) (x[2]))
Emotion_Labeling_REDCAP <- select(Emotion_Labeling_REDCAP, c(Fam_ID = fam_id,  timepoint, starts_with("oc_elt_")))
Emotion_Labeling_REDCAP <- select(Emotion_Labeling_REDCAP, -c(oc_elt_notes))
#Select relevant pedigree information
Pedigree_T1 <- data.frame(select(Pedigree, Fam_ID =  FamID, child_guid, child_famID = FamID_Child, interview_date = Time1Date, interview_age = MomAge_T1, child_sex = ChildGender, GroupAssignment), timepoint = 1 )
Pedigree_T2 <- data.frame(select(Pedigree, Fam_ID =  FamID, child_guid, child_famID = FamID_Child, interview_date = Time2Date, interview_age = MomAge_T2, child_sex = ChildGender, GroupAssignment), timepoint = 2 )
Pedigree_T3 <- data.frame(select(Pedigree, Fam_ID =  FamID, child_guid, child_famID = FamID_Child, interview_date = Time3Date, interview_age = MomAge_T3, child_sex = ChildGender, GroupAssignment), timepoint = 3 )
Pedigree_T4 <- data.frame(select(Pedigree, Fam_ID =  FamID, child_guid, child_famID = FamID_Child, interview_date = Time4Date, interview_age = MomAge_T4, child_sex = ChildGender, GroupAssignment), timepoint = 4 )
#Merge pedigree info
Pedigree_Prep <- rbind(Pedigree_T1, Pedigree_T2, Pedigree_T3, Pedigree_T4)
#merge Pedigree info and Redcap data
EL_PREP <- merge(Pedigree_Prep, Emotion_Labeling_REDCAP,by = c("timepoint","Fam_ID"), all = TRUE)
#clean environment
# rm(Pedigree, Pedigree_Prep, Pedigree_T1, Pedigree_T2, Pedigree_T3, Pedigree_T4, Emotion_Labeling_REDCAP)
exp <- colnames(select(EL_PREP, c("oc_elt_exp_2", "oc_elt_exp_4", "oc_elt_exp_6", "oc_elt_exp_8")))
rec <- colnames(select(EL_PREP, c("oc_elt_rec_1", "oc_elt_rec_2", "oc_elt_rec_3", "oc_elt_rec_4")))
EL_PREP$oc_elt_exp_total <- rowMeans(EL_PREP[,exp], na.rm = TRUE)
EL_PREP$oc_elt_rec_total <- rowMeans(EL_PREP[,rec], na.rm = TRUE)
EL_PREP$NACheck <- rowSums(is.na(select(EL_PREP, starts_with("oc_elt_"))))/ncol(dplyr::select(EL_PREP, starts_with("oc_elt_")))
#EL_PREP$EL_total_cor <- ifelse(EL_PREP$NACheck < 0.67, rowMeans(EL_PREP[,oc_elt_total], na.rm = TRUE), "NA")
#Separate Data into % response
EL_DROP <- EL_PREP[EL_PREP$NACheck > 0.67, ]
EL_PREP67 <- EL_PREP[EL_PREP$NACheck <= 0.67, ]
EL_PREP100 <- EL_PREP[EL_PREP$NACheck <= 0, ]
#Clear Environment Setup
rm(list = ls())
#Enable Packages
library(dplyr)
library(tidyverse)
library(data.table)
library(kableExtra)
Emotion_Labeling_REDCAP <- read.csv("Redcap_Data.csv")
Pedigree <- read.csv("Reference_Pedigree.csv")
Emotion_Labeling_NDA <- read.csv("elt01_template.csv", skip=1)
#rename elt_exp names
eltpart1_exp <- "oc_elt_exp"
num_items <- seq(1:8)
new_eltpart1_names <- paste(eltpart1_exp, num_items, sep = "_")
#rename elt_rec names
eltpart2_rec <- "oc_elt_rec"
num_items <- seq (1:4)
new_eltpart2_names <- paste(eltpart2_rec, num_items, sep = "_")
#replace old eltpart1 names with new names
eltpart1_exp <- "eltpart1_exp"
num_items <- seq (1:8)
old_eltpart1_names <- paste(eltpart1_exp, num_items, sep = "")
setnames(Emotion_Labeling_REDCAP, old_eltpart1_names, new_eltpart1_names)
#replace old eltpart2 names with new names
eltpart2_rec <- "eltpart2_rec"
num_items <- seq (1:4)
old_eltpart2_names <- paste(eltpart2_rec, num_items, sep = "")
setnames(Emotion_Labeling_REDCAP, old_eltpart2_names, new_eltpart2_names)
#Assign timepoint from redcap_event_name
Emotion_Labeling_REDCAP$timepoint = sapply(strsplit(as.character(Emotion_Labeling_REDCAP$redcap_event_name), split = '_', fixed = T), function(x) (x[2]))
Emotion_Labeling_REDCAP <- select(Emotion_Labeling_REDCAP, c(Fam_ID = fam_id,  timepoint, starts_with("oc_elt_")))
Emotion_Labeling_REDCAP <- select(Emotion_Labeling_REDCAP, -c(oc_elt_notes))
#Select relevant pedigree information
Pedigree_T1 <- data.frame(select(Pedigree, Fam_ID =  FamID, child_guid, child_famID = FamID_Child, interview_date = Time1Date, interview_age = MomAge_T1, child_sex = ChildGender, GroupAssignment), timepoint = 1 )
Pedigree_T2 <- data.frame(select(Pedigree, Fam_ID =  FamID, child_guid, child_famID = FamID_Child, interview_date = Time2Date, interview_age = MomAge_T2, child_sex = ChildGender, GroupAssignment), timepoint = 2 )
Pedigree_T3 <- data.frame(select(Pedigree, Fam_ID =  FamID, child_guid, child_famID = FamID_Child, interview_date = Time3Date, interview_age = MomAge_T3, child_sex = ChildGender, GroupAssignment), timepoint = 3 )
Pedigree_T4 <- data.frame(select(Pedigree, Fam_ID =  FamID, child_guid, child_famID = FamID_Child, interview_date = Time4Date, interview_age = MomAge_T4, child_sex = ChildGender, GroupAssignment), timepoint = 4 )
#Merge pedigree info
Pedigree_Prep <- rbind(Pedigree_T1, Pedigree_T2, Pedigree_T3, Pedigree_T4)
#merge Pedigree info and Redcap data
EL_PREP <- merge(Pedigree_Prep, Emotion_Labeling_REDCAP,by = c("timepoint","Fam_ID"), all = TRUE)
#clean environment
# rm(Pedigree, Pedigree_Prep, Pedigree_T1, Pedigree_T2, Pedigree_T3, Pedigree_T4, Emotion_Labeling_REDCAP)
exp <- colnames(select(EL_PREP, c("oc_elt_exp_2", "oc_elt_exp_4", "oc_elt_exp_6", "oc_elt_exp_8")))
rec <- colnames(select(EL_PREP, c("oc_elt_rec_1", "oc_elt_rec_2", "oc_elt_rec_3", "oc_elt_rec_4")))
EL_PREP$oc_elt_exp_total <- rowMeans(EL_PREP[,exp], na.rm = TRUE)
EL_PREP$oc_elt_rec_total <- rowMeans(EL_PREP[,rec], na.rm = TRUE)
EL_PREP$NACheck <- rowSums(is.na(select(EL_PREP, starts_with("oc_elt_"))))/ncol(dplyr::select(EL_PREP, starts_with("oc_elt_")))
#EL_PREP$EL_total_cor <- ifelse(EL_PREP$NACheck < 0.67, rowMeans(EL_PREP[,oc_elt_total], na.rm = TRUE), "NA")
#Separate Data into % response
EL_DROP <- EL_PREP[EL_PREP$NACheck > 0.67, ]
EL_PREP67 <- EL_PREP[EL_PREP$NACheck <= 0.67, ]
EL_PREP100 <- EL_PREP[EL_PREP$NACheck <= 0, ]
Emotion_Labeling_NDA <- select(EL_PREP67, c(subjectkey = child_guid, src_subject_id = child_famID, interview_date, interview_age, sex = child_sex, visit = timepoint, starts_with("oc_elt_")))
# Recreate first line in orignial NDA file
Emotion_Labeling_NDA <- bind_rows(Emotion_Labeling_NDA, EL_PREP67)
first_line <- matrix("", nrow = 1, ncol = ncol(Emotion_Labeling_NDA))
first_line[,1] <- "el"
# assign the second cell in first_line as "el"
first_line[,2] <- "1"
# NDA output ---------
# Create a new file in folder called el.csv, and put first line into this file
# el.csv file will be saved into same folder as current r script
write.table(first_line, file = "el01.csv", sep = ",", append = FALSE, quote = FALSE, na = "", col.names = FALSE, row.names = FALSE)
# Append data in Emotion_Ladeling_NDA into el.csv file
write.table(Emotion_Labeling_NDA, file = 'el01.csv', sep = ",", append = TRUE, na = "", quote = FALSE, row.names = FALSE)
Progress67 <- select(EL_PREP67, c(Fam_ID, GroupAssignment, timepoint, starts_with("oc_elt_")))
EL_PREP67[, c(10,12,14,16:23)] <- sapply(EL_PREP67[, c(10,12,14,16:23)] ,as.numeric)
# Calculate row mean for each individual
#Progress67$Row_Mean <- rowMeans(select(EL_PREP67,c(starts_with("oc_elt"))), na.rm = T)
Progress67$Row_Mean <- rowMeans(select(EL_PREP67, c(10,12,14,16:23)))
# Change FamId as character and assign to ID variable
ID <- c(as.character(Progress67$Fam_ID))
# Add Site column to Progress, if ID start with 9 then site is UO, else is UPMC
Progress67$site <- ifelse(startsWith(ID, "9"),"UO","UPMC")
# Group by GroupAssissignment and Timepoint, and calculate the Group Mean
Progress_Mean <- Progress67 %>%
group_by(GroupAssignment,timepoint,site) %>%
summarise(GroupMean = mean(Row_Mean,na.rm = T),count = n())
# Select only UO Mean
UO <- Progress_Mean[Progress_Mean$site == "UO",]
# Select only UPMC Mean
UPMC <- Progress_Mean[Progress_Mean$site == "UPMC",]
# Calculate Both site Mean
Both_site_Mean <- Progress67 %>%
group_by(GroupAssignment, timepoint) %>%
summarise(BothSite_EmotionalLabeling_Mean = mean(Row_Mean,na.rm = T),n = n())
# Change GroupMean Column names according to site
colnames(UO)[colnames(UO) == "GroupMean"] = "UO_EmotionalLabeling"
colnames(UPMC)[colnames(UPMC) == "GroupMean"] = "UPMC_EmotionalLabeling"
# Combine UO,UPMC and both_site data
Mean_Table67 <- data.frame(UO[,c("UO_EmotionalLabeling")],UPMC[,"UPMC_EmotionalLabeling"],Both_site_Mean[,c("BothSite_EmotionalLabeling_Mean","n","GroupAssignment")])
